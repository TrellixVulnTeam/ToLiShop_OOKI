[{"/Users/linhleba/Desktop/ToLiShop/src/index.js":"1","/Users/linhleba/Desktop/ToLiShop/src/reportWebVitals.js":"2","/Users/linhleba/Desktop/ToLiShop/src/redux/store.js":"3","/Users/linhleba/Desktop/ToLiShop/src/components/Layout.jsx":"4","/Users/linhleba/Desktop/ToLiShop/src/redux/shopping-cart/cartItemsSlide.js":"5","/Users/linhleba/Desktop/ToLiShop/src/redux/product-modal/productModalSlice.js":"6","/Users/linhleba/Desktop/ToLiShop/src/components/Header.jsx":"7","/Users/linhleba/Desktop/ToLiShop/src/components/ProductViewModal.jsx":"8","/Users/linhleba/Desktop/ToLiShop/src/components/Footer.jsx":"9","/Users/linhleba/Desktop/ToLiShop/src/routes/Routes.jsx":"10","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/products.js":"11","/Users/linhleba/Desktop/ToLiShop/src/components/Button.jsx":"12","/Users/linhleba/Desktop/ToLiShop/src/components/Grid.jsx":"13","/Users/linhleba/Desktop/ToLiShop/src/components/ProductView.jsx":"14","/Users/linhleba/Desktop/ToLiShop/src/pages/Home.jsx":"15","/Users/linhleba/Desktop/ToLiShop/src/pages/Cart.jsx":"16","/Users/linhleba/Desktop/ToLiShop/src/pages/Product.jsx":"17","/Users/linhleba/Desktop/ToLiShop/src/pages/Catalog.jsx":"18","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/hero-slider.js":"19","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/policy.js":"20","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/product-color.js":"21","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/category.js":"22","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/product-size.js":"23","/Users/linhleba/Desktop/ToLiShop/src/components/Section.jsx":"24","/Users/linhleba/Desktop/ToLiShop/src/components/CartItem.jsx":"25","/Users/linhleba/Desktop/ToLiShop/src/components/ProductCard.jsx":"26","/Users/linhleba/Desktop/ToLiShop/src/components/CheckBox.jsx":"27","/Users/linhleba/Desktop/ToLiShop/src/components/PolicyCard.jsx":"28","/Users/linhleba/Desktop/ToLiShop/src/components/Helmet.jsx":"29","/Users/linhleba/Desktop/ToLiShop/src/components/HeroSlider.jsx":"30","/Users/linhleba/Desktop/ToLiShop/src/components/InfinityList.jsx":"31","/Users/linhleba/Desktop/ToLiShop/src/api/index.js":"32","/Users/linhleba/Desktop/ToLiShop/src/utils/apiCaller.js":"33","/Users/linhleba/Desktop/ToLiShop/src/constants/Config.js":"34","/Users/linhleba/Desktop/ToLiShop/src/constants/config.local.js":"35","/Users/linhleba/Desktop/ToLiShop/src/utils/numberWithCommas.js":"36","/Users/linhleba/Desktop/ToLiShop/src/components/popup/PopUp.jsx":"37","/Users/linhleba/Desktop/ToLiShop/src/components/controls/Controls.jsx":"38","/Users/linhleba/Desktop/ToLiShop/src/components/controls/Input.jsx":"39","/Users/linhleba/Desktop/ToLiShop/src/components/controls/DatePicker.jsx":"40","/Users/linhleba/Desktop/ToLiShop/src/components/controls/Button.jsx":"41","/Users/linhleba/Desktop/ToLiShop/src/components/controls/ActionButton.jsx":"42","/Users/linhleba/Desktop/ToLiShop/src/components/controls/Alert.jsx":"43","/Users/linhleba/Desktop/ToLiShop/src/components/controls/Checkbox.jsx":"44","/Users/linhleba/Desktop/ToLiShop/src/components/controls/RadioGroup.jsx":"45","/Users/linhleba/Desktop/ToLiShop/src/components/controls/Select.jsx":"46","/Users/linhleba/Desktop/ToLiShop/src/components/login/Login.jsx":"47","/Users/linhleba/Desktop/ToLiShop/src/components/login/style.js":"48","/Users/linhleba/Desktop/ToLiShop/src/components/login/Input.js":"49","/Users/linhleba/Desktop/ToLiShop/src/components/login/icon.js":"50","/Users/linhleba/Desktop/ToLiShop/src/redux/ducks/snackbar.js":"51","/Users/linhleba/Desktop/ToLiShop/src/redux/ducks/auth.js":"52","/Users/linhleba/Desktop/ToLiShop/src/components/dropdown/dropdown.jsx":"53","/Users/linhleba/Desktop/ToLiShop/src/components/progress/Progress.jsx":"54","/Users/linhleba/Desktop/ToLiShop/src/components/Payment/Payment.jsx":"55","/Users/linhleba/Desktop/ToLiShop/src/pages/Order.jsx":"56","/Users/linhleba/Desktop/ToLiShop/src/components/shipping/Shipping.jsx":"57","/Users/linhleba/Desktop/ToLiShop/src/pages/Password.jsx":"58","/Users/linhleba/Desktop/ToLiShop/src/pages/Profile.jsx":"59","/Users/linhleba/Desktop/ToLiShop/src/constants/ImageConfig.js":"60","/Users/linhleba/Desktop/ToLiShop/src/components/useForm/useForm.jsx":"61","/Users/linhleba/Desktop/ToLiShop/src/utils/formatPrice/formatPrice.js":"62","/Users/linhleba/Desktop/ToLiShop/src/components/snackbar/SnackBar.jsx":"63","/Users/linhleba/Desktop/ToLiShop/src/components/shipinfo/ShipInfo.jsx":"64","/Users/linhleba/Desktop/ToLiShop/src/pages/History.jsx":"65","/Users/linhleba/Desktop/ToLiShop/src/components/transaction/Transaction.jsx":"66","/Users/linhleba/Desktop/ToLiShop/src/components/nganluong/NganLuong.jsx":"67","/Users/linhleba/Desktop/ToLiShop/src/components/momo/MoMo.jsx":"68"},{"size":855,"mtime":1650436137684,"results":"69","hashOfConfig":"70"},{"size":362,"mtime":1648536244896,"results":"71","hashOfConfig":"70"},{"size":723,"mtime":1650362256901,"results":"72","hashOfConfig":"70"},{"size":752,"mtime":1648536244894,"results":"73","hashOfConfig":"70"},{"size":3295,"mtime":1649043093307,"results":"74","hashOfConfig":"70"},{"size":554,"mtime":1649043742635,"results":"75","hashOfConfig":"70"},{"size":6040,"mtime":1653649619148,"results":"76","hashOfConfig":"70"},{"size":1228,"mtime":1649045232591,"results":"77","hashOfConfig":"70"},{"size":2735,"mtime":1650431853811,"results":"78","hashOfConfig":"70"},{"size":1463,"mtime":1653926906987,"results":"79","hashOfConfig":"70"},{"size":71944,"mtime":1648954867437,"results":"80","hashOfConfig":"70"},{"size":864,"mtime":1650365601700,"results":"81","hashOfConfig":"70"},{"size":654,"mtime":1648536244893,"results":"82","hashOfConfig":"70"},{"size":8729,"mtime":1653986518469,"results":"83","hashOfConfig":"70"},{"size":4088,"mtime":1649380903009,"results":"84","hashOfConfig":"70"},{"size":2671,"mtime":1653649619164,"results":"85","hashOfConfig":"70"},{"size":3152,"mtime":1653927210447,"results":"86","hashOfConfig":"70"},{"size":6828,"mtime":1653649619165,"results":"87","hashOfConfig":"70"},{"size":1518,"mtime":1650370467180,"results":"88","hashOfConfig":"70"},{"size":626,"mtime":1648536244632,"results":"89","hashOfConfig":"70"},{"size":419,"mtime":1648536244632,"results":"90","hashOfConfig":"70"},{"size":271,"mtime":1648536244632,"results":"91","hashOfConfig":"70"},{"size":308,"mtime":1648536244632,"results":"92","hashOfConfig":"70"},{"size":467,"mtime":1648536244895,"results":"93","hashOfConfig":"70"},{"size":2528,"mtime":1649042818734,"results":"94","hashOfConfig":"70"},{"size":1522,"mtime":1650356969128,"results":"95","hashOfConfig":"70"},{"size":702,"mtime":1648536244893,"results":"96","hashOfConfig":"70"},{"size":767,"mtime":1648536244894,"results":"97","hashOfConfig":"70"},{"size":333,"mtime":1648952930230,"results":"98","hashOfConfig":"70"},{"size":2764,"mtime":1650370025049,"results":"99","hashOfConfig":"70"},{"size":1879,"mtime":1649413655852,"results":"100","hashOfConfig":"70"},{"size":424,"mtime":1649040570645,"results":"101","hashOfConfig":"70"},{"size":692,"mtime":1648202165060,"results":"102","hashOfConfig":"70"},{"size":128,"mtime":1648258510839,"results":"103","hashOfConfig":"70"},{"size":52,"mtime":1653993680050,"results":"104","hashOfConfig":"70"},{"size":119,"mtime":1648536244900,"results":"105","hashOfConfig":"70"},{"size":1303,"mtime":1649657617527,"results":"106","hashOfConfig":"70"},{"size":419,"mtime":1648462726902,"results":"107","hashOfConfig":"70"},{"size":1242,"mtime":1648462726907,"results":"108","hashOfConfig":"70"},{"size":831,"mtime":1648462726905,"results":"109","hashOfConfig":"70"},{"size":647,"mtime":1648462726901,"results":"110","hashOfConfig":"70"},{"size":743,"mtime":1648462726900,"results":"111","hashOfConfig":"70"},{"size":824,"mtime":1648462726901,"results":"112","hashOfConfig":"70"},{"size":692,"mtime":1648462726901,"results":"113","hashOfConfig":"70"},{"size":643,"mtime":1648462726908,"results":"114","hashOfConfig":"70"},{"size":755,"mtime":1648462726908,"results":"115","hashOfConfig":"70"},{"size":8694,"mtime":1653649619162,"results":"116","hashOfConfig":"70"},{"size":638,"mtime":1648462726913,"results":"117","hashOfConfig":"70"},{"size":1006,"mtime":1648462726911,"results":"118","hashOfConfig":"70"},{"size":502,"mtime":1648462726912,"results":"119","hashOfConfig":"70"},{"size":707,"mtime":1650361737177,"results":"120","hashOfConfig":"70"},{"size":748,"mtime":1648462726915,"results":"121","hashOfConfig":"70"},{"size":1698,"mtime":1648462726908,"results":"122","hashOfConfig":"70"},{"size":2178,"mtime":1650364755510,"results":"123","hashOfConfig":"70"},{"size":14497,"mtime":1653988932516,"results":"124","hashOfConfig":"70"},{"size":438,"mtime":1650364771585,"results":"125","hashOfConfig":"70"},{"size":2446,"mtime":1653649619163,"results":"126","hashOfConfig":"70"},{"size":3682,"mtime":1650360913493,"results":"127","hashOfConfig":"70"},{"size":5759,"mtime":1650364229110,"results":"128","hashOfConfig":"70"},{"size":143,"mtime":1648195698461,"results":"129","hashOfConfig":"70"},{"size":2370,"mtime":1648462726921,"results":"130","hashOfConfig":"70"},{"size":588,"mtime":1648195698465,"results":"131","hashOfConfig":"70"},{"size":1459,"mtime":1650362941944,"results":"132","hashOfConfig":"70"},{"size":4820,"mtime":1650364223630,"results":"133","hashOfConfig":"70"},{"size":114,"mtime":1650365660084,"results":"134","hashOfConfig":"70"},{"size":8648,"mtime":1653553786736,"results":"135","hashOfConfig":"70"},{"size":138,"mtime":1651549006830,"results":"136","hashOfConfig":"70"},{"size":425,"mtime":1653553786735,"results":"137","hashOfConfig":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"zszf58",{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"140"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"140"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"140"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"140"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"140"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"140"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"140"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"140"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"140"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"140"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"140"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"140"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"140"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"140"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"274","usedDeprecatedRules":"140"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"140"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"140"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"140"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},"/Users/linhleba/Desktop/ToLiShop/src/index.js",[],["296","297"],"/Users/linhleba/Desktop/ToLiShop/src/reportWebVitals.js",[],"/Users/linhleba/Desktop/ToLiShop/src/redux/store.js",["298"],"import { configureStore } from '@reduxjs/toolkit';\n\nimport { combineReducers, createStore } from 'redux';\nimport productModalReducer from './product-modal/productModalSlice';\n\nimport cartItemsReducer from './shopping-cart/cartItemsSlide';\nimport snackbarReducer from './ducks/snackbar';\nimport authenticateReducer from './ducks/auth';\n\n// export const store = configureStore({\n//   reducer: {\n//     productModal: productModalReducer,\n//     cartItems: cartItemsReducer,\n//   },\n// });\n\nconst reducer = combineReducers({\n  snackbar: snackbarReducer,\n  authenticate: authenticateReducer,\n  productModal: productModalReducer,\n  cartItems: cartItemsReducer,\n});\n\nconst store = createStore(reducer, {});\n\nexport default store;\n","/Users/linhleba/Desktop/ToLiShop/src/components/Layout.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/redux/shopping-cart/cartItemsSlide.js",[],"/Users/linhleba/Desktop/ToLiShop/src/redux/product-modal/productModalSlice.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/Header.jsx",["299","300","301"],"import React, { useRef, useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport logo from '../assets/images/Logo-2.png';\nimport PopUp from '../components/popup/PopUp';\nimport Login from '../components/login/Login';\nimport user_menus from '../assets/JsonData/user_menus.json';\nimport DropDown from '../components/dropdown/dropdown';\nimport { logout } from '../redux/ducks/auth';\nimport { useDispatch } from 'react-redux';\nimport './header.css';\nimport callAPI from '../utils/apiCaller';\nimport { useSelector } from 'react-redux';\n\nconst renderUserToggle = (user) => (\n  <div className=\"top-nav__right-user\">\n    <div className=\"top-nav__right-user__image\">\n      <img src={user?.image} alt=\"User Image\" />\n    </div>\n  </div>\n);\n\nconst mainNav = [\n  {\n    display: 'Trang chủ',\n    path: '/',\n  },\n  {\n    display: 'Sản phẩm',\n    path: '/catalog',\n  },\n  // {\n  //   display: 'Phụ kiện',\n  //   path: '/accessories',\n  // },\n  {\n    display: 'Liên hệ',\n    path: '/contact',\n  },\n];\n\nconst Header = (props) => {\n  const cartItems = useSelector((state) => state.cartItems.value);\n  const [currentUser, setCurrentUser] = useState(null);\n  const dispatch = useDispatch();\n  const [openPopup, setOpenPopup] = useState(false);\n  const { pathname } = useLocation();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const [token, setToken] = useState(user?.access_jwt_token);\n  // const [token, setToken] = useState('ok');\n\n  useEffect(async () => {\n    let profile = localStorage.getItem('profile');\n    let access_jwt_token = JSON.parse(profile)?.access_jwt_token;\n    await callAPI('api/account/info', 'get', null, {\n      authorization: access_jwt_token,\n    }).then((res) => {\n      console.log(res);\n      setCurrentUser({\n        display_name: res.data?.username,\n        image: res.data?.photo\n          ? res.data?.photo\n          : 'https://cdn-icons-png.flaticon.com/512/149/149071.png',\n      });\n    });\n    // console.log('abcd', currentUser);\n  }, [token]);\n\n  const activeNav = mainNav.findIndex((e) => e.path === pathname);\n\n  const headerRef = useRef(null);\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (\n        document.body.scrollTop > 80 ||\n        document.documentElement.scrollTop > 80\n      ) {\n        headerRef.current.classList.add('shrink');\n      } else {\n        headerRef.current.classList.remove('shrink');\n      }\n    });\n    return () => {\n      window.removeEventListener('scroll');\n    };\n  }, []);\n\n  const menuLeft = useRef(null);\n\n  const menuToggle = () => menuLeft.current.classList.toggle('active');\n\n  const handleLogOut = () => {\n    dispatch(logout());\n    setToken(null);\n    // props.setToken(null);\n    // history.push('/');\n  };\n\n  const displayUserData = (object, index) => {\n    return (\n      <Link\n        key={index}\n        to={object.url}\n        onClick={() => {\n          if (index === 3) {\n            handleLogOut();\n          }\n        }}\n      >\n        <div className=\"notification-item\">\n          <i className={object.icon}></i>\n          <div>{object.content}</div>\n        </div>\n      </Link>\n    );\n  };\n\n  return (\n    <div className=\"header\" ref={headerRef}>\n      <div className=\"container\">\n        <div className=\"header__logo\">\n          <Link to=\"/\">\n            <img src={logo} alt=\"\" />\n          </Link>\n        </div>\n        <div className=\"header__menu\">\n          <div className=\"header__menu__mobile-toggle\" onClick={menuToggle}>\n            <i className=\"bx bx-menu-alt-left\"></i>\n          </div>\n          <div className=\"header__menu__left\" ref={menuLeft}>\n            <div className=\"header__menu__left__close\" onClick={menuToggle}>\n              <i className=\"bx bx-chevron-left\"></i>\n            </div>\n            {mainNav.map((item, index) => (\n              <div\n                key={index}\n                className={`header__menu__item header__menu__left__item ${\n                  index === activeNav ? 'active' : ''\n                }`}\n                onClick={menuToggle}\n              >\n                <Link to={item.path}>\n                  <span>{item.display}</span>\n                </Link>\n              </div>\n            ))}\n          </div>\n          <div className=\"header__menu__right\">\n            <div className=\"header__menu__item header__menu__right__item\">\n              <i className=\"bx bx-search\"></i>\n            </div>\n            <div className=\"header__menu__item header__menu__right__item\">\n              <Link to=\"/cart\">\n                <i className=\"bx bx-shopping-bag relative-position\">\n                  <button className=\"quantity__cart\">{cartItems.length}</button>\n                </i>\n              </Link>\n            </div>\n            <div className=\"header__menu__item header__menu__right__item\">\n              {token ? (\n                <div className=\"top-nav__right\">\n                  <div className=\"top-nav__right-item\">\n                    <DropDown\n                      customToggle={() => renderUserToggle(currentUser)}\n                      dataContent={user_menus}\n                      renderItems={(object, index) =>\n                        displayUserData(object, index)\n                      }\n                    />\n                  </div>\n                </div>\n              ) : (\n                <button\n                  style={{ all: 'unset', cursor: 'pointer' }}\n                  onClick={() => {\n                    setOpenPopup(true);\n                  }}\n                >\n                  <i className=\"bx bx-user\"></i>\n                </button>\n              )}\n\n              <PopUp\n                // title=\"Đăng nhập\"\n                isTitle=\"false\"\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n              >\n                <Login setToken={setToken} setOpenPopup={setOpenPopup} />\n              </PopUp>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","/Users/linhleba/Desktop/ToLiShop/src/components/ProductViewModal.jsx",["302","303"],"import React, { useEffect, useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ProductView from './ProductView';\n\nimport Button from './Button';\n\nimport { remove } from '../redux/product-modal/productModalSlice';\n\nimport productData from '../assets/fake-data/products';\n\nimport apiCaller from '../utils/apiCaller';\n\nconst ProductViewModal = () => {\n  const productSlug = useSelector((state) => state.productModal.value);\n  const dispatch = useDispatch();\n\n  const [product, setProduct] = useState(undefined);\n\n  useEffect(async () => {\n    // setProduct(productData.getProductBySlug(productSlug))\n    await apiCaller(`api/book/${productSlug}`, 'get').then((res) => {\n      setProduct(res.data);\n    });\n  }, [productSlug]);\n\n  return product ? (\n    <div\n      className={`product-view__modal ${product === undefined ? '' : 'active'}`}\n    >\n      <div className=\"product-view__modal__content\">\n        <ProductView product={product} />\n        <div className=\"product-view__modal__content__close\">\n          <Button size=\"sm\" onClick={() => dispatch(remove())}>\n            đóng\n          </Button>\n        </div>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default ProductViewModal;\n","/Users/linhleba/Desktop/ToLiShop/src/components/Footer.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/routes/Routes.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/products.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/Button.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/Grid.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/ProductView.jsx",["304","305"],"/Users/linhleba/Desktop/ToLiShop/src/pages/Home.jsx",["306","307","308","309"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Helmet from '../components/Helmet';\nimport HeroSlider from '../components/HeroSlider';\nimport Section, { SectionTitle, SectionBody } from '../components/Section';\nimport PolicyCard from '../components/PolicyCard';\nimport Grid from '../components/Grid';\nimport ProductCard from '../components/ProductCard';\n\nimport heroSliderData from '../assets/fake-data/hero-slider';\nimport policy from '../assets/fake-data/policy';\nimport productData from '../assets/fake-data/products';\n\nimport banner from '../assets/images/banner.png';\nimport * as api from '../api/index';\n\nconst Home = () => {\n  const getProducts = (products, count) => {\n    const max = products?.length - count;\n    const min = 0;\n    const start = Math.floor(Math.random() * (max - min) + min);\n    return products?.slice(start, start + count);\n  };\n  const [books, setBooks] = useState([]);\n  useEffect(async () => {\n    const res = await api.getBook();\n    // console.log(res);\n    setBooks(res.data);\n    console.log('books is', books);\n  }, []);\n  return (\n    <Helmet title=\"Trang chủ\">\n      {/* hero slider */}\n      <HeroSlider\n        data={heroSliderData}\n        control={true}\n        auto={false}\n        timeOut={5000}\n      />\n      {/* end hero slider */}\n\n      {/* policy section */}\n      <Section>\n        <SectionBody>\n          <Grid col={4} mdCol={2} smCol={1} gap={20}>\n            {policy.map((item, index) => (\n              <Link key={index} to=\"/policy\">\n                <PolicyCard\n                  name={item.name}\n                  description={item.description}\n                  icon={item.icon}\n                />\n              </Link>\n            ))}\n          </Grid>\n        </SectionBody>\n      </Section>\n      {/* end policy section */}\n\n      {/* best selling section */}\n      <Section>\n        <SectionTitle>top sản phẩm bán chạy trong tuần</SectionTitle>\n        <SectionBody>\n          <Grid col={4} mdCol={2} smCol={1} gap={20}>\n            {books &&\n              getProducts(books, 4).map((item, index) => (\n                <ProductCard\n                  key={index}\n                  img01={item.image_url}\n                  img02={item.image_url}\n                  name={item.name}\n                  price={Number(item.price)}\n                  slug={item.id}\n                />\n              ))}\n          </Grid>\n        </SectionBody>\n      </Section>\n      {/* end best selling section */}\n\n      {/* new arrival section */}\n      <Section>\n        <SectionTitle>sản phẩm mới</SectionTitle>\n        <SectionBody>\n          <Grid col={4} mdCol={2} smCol={1} gap={20}>\n            {books &&\n              getProducts(books, 8).map((item, index) => (\n                <ProductCard\n                  key={index}\n                  img01={item.image_url}\n                  img02={item.image_url}\n                  name={item.name}\n                  price={Number(item.price)}\n                  slug={item.id}\n                />\n              ))}\n          </Grid>\n        </SectionBody>\n      </Section>\n      {/* end new arrival section */}\n\n      {/* banner */}\n      {/* <Section>\n        <SectionBody>\n          <Link to=\"/catalog\">\n            <img src={banner} alt=\"\" />\n          </Link>\n        </SectionBody>\n      </Section> */}\n      {/* end banner */}\n\n      {/* popular product section */}\n      <Section>\n        <SectionTitle>phổ biến</SectionTitle>\n        <SectionBody>\n          <Grid col={4} mdCol={2} smCol={1} gap={20}>\n            {books &&\n              getProducts(books, 12).map((item, index) => (\n                <ProductCard\n                  key={index}\n                  img01={item.image_url}\n                  img02={item.image_url}\n                  name={item.name}\n                  price={Number(item.price)}\n                  slug={item.id}\n                />\n              ))}\n          </Grid>\n        </SectionBody>\n      </Section>\n      {/* end popular product section */}\n    </Helmet>\n  );\n};\n\nexport default Home;\n","/Users/linhleba/Desktop/ToLiShop/src/pages/Cart.jsx",["310"],"import React, { useEffect, useState } from 'react';\n\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport Helmet from '../components/Helmet';\nimport CartItem from '../components/CartItem';\nimport Button from '../components/Button';\n\nimport productData from '../assets/fake-data/products';\nimport numberWithCommas from '../utils/numberWithCommas';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { setSnackbar } from '../redux/ducks/snackbar';\n\nconst Cart = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const cartItems = useSelector((state) => state.cartItems.value);\n\n  const [cartProducts, setCartProducts] = useState(\n    productData.getCartItemsInfo(cartItems),\n  );\n\n  console.log('cart item is', cartItems);\n  console.log('cart product is', cartProducts);\n\n  const [totalProducts, setTotalProducts] = useState(0);\n\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  useEffect(() => {\n    setCartProducts(productData.getCartItemsInfo(cartItems));\n    setTotalPrice(\n      cartItems.reduce(\n        (total, item) => total + Number(item.quantity) * Number(item.price),\n        0,\n      ),\n    );\n    setTotalProducts(\n      cartItems.reduce((total, item) => total + Number(item.quantity), 0),\n    );\n  }, [cartItems]);\n\n  const handleOrder = () => {\n    if (cartItems.length == 0) {\n      dispatch(setSnackbar(true, 'error', 'Đơn hàng cần ít nhất 1 sản phẩm'));\n    } else {\n      history.push('/order');\n    }\n  };\n\n  return (\n    <Helmet title=\"Giỏ hàng\">\n      <div className=\"cart\">\n        <div className=\"cart__info\">\n          <div className=\"cart__info__txt\">\n            <p>Bạn đang có {totalProducts} sản phẩm trong giỏ hàng</p>\n            <div className=\"cart__info__txt__price\">\n              <span>Thành tiền:</span>{' '}\n              <span>{numberWithCommas(Number(totalPrice))}</span>\n            </div>\n          </div>\n          <div className=\"cart__info__btn\">\n            <Button\n              size=\"block\"\n              style={{ marginBottom: '20px' }}\n              onClick={() => handleOrder()}\n            >\n              Đặt hàng\n            </Button>\n\n            {/* <Button size=\"block\">Đặt hàng</Button> */}\n            <Link to=\"/catalog\">\n              <Button size=\"block\">Tiếp tục mua hàng</Button>\n            </Link>\n          </div>\n        </div>\n        <div className=\"cart__list\">\n          {cartProducts.map((item, index) => (\n            <CartItem item={item} key={index} />\n          ))}\n        </div>\n      </div>\n    </Helmet>\n  );\n};\n\nexport default Cart;\n","/Users/linhleba/Desktop/ToLiShop/src/pages/Product.jsx",["311","312","313"],"import React, { useState, useEffect } from 'react';\n\nimport Helmet from '../components/Helmet';\nimport Section, { SectionBody, SectionTitle } from '../components/Section';\nimport Grid from '../components/Grid';\nimport ProductCard from '../components/ProductCard';\nimport ProductView from '../components/ProductView';\n\nimport productData from '../assets/fake-data/products';\nimport * as api from '../api/index';\nimport apiCaller from '../utils/apiCaller';\n\nconst Product = (props) => {\n  const [product, setProducts] = useState(null);\n  //   const product = productData.getProductBySlug(props.match.params.slug);\n\n  const [userId, setUserId] = useState(null);\n  console.log('slug is', props.match.params.slug);\n\n  const [recommendProductIds, setRecommendProductIds] = useState(null);\n\n  const [recommendProducts, setRecommendProducts] = useState(null);\n\n  useEffect(() => {\n    apiCaller(`api/book/${props.match.params.slug}`, 'get').then((res) => {\n      setProducts(res.data);\n    });\n\n    let profile = localStorage.getItem('profile');\n    let access_jwt_token = JSON.parse(profile)?.access_jwt_token;\n    apiCaller('api/account/info', 'get', null, {\n      authorization: access_jwt_token,\n    }).then((res) => {\n      // console.log('user id is:', res.data);\n      setUserId(res.data?.user_id);\n    });\n  }, [props.match.params.slug]);\n\n  useEffect(() => {\n    apiCaller(`api/MLData/${userId}`).then((res) => {\n      // console.log('data recommdnd:', res.data?.yourData?.bookIds);\n      setRecommendProductIds(res.data?.yourData?.bookIds);\n    });\n  }, [userId]);\n\n  useEffect(async () => {\n    console.log('recommedn product:', recommendProductIds);\n    if (recommendProductIds) {\n      let tempArray = [];\n      Promise.all(\n        recommendProductIds.map(async (item) => {\n          await apiCaller(`api/book/${item}`, 'get').then(async (res) => {\n            // console.log('gia tri cua recomend', res);\n            // let dataProduct = res.data;\n            await tempArray.push(res.data);\n          });\n        }),\n      ).then(() => {\n        setRecommendProducts(tempArray);\n        // console.log('data temparray proudct', tempArray);\n      });\n    }\n    // console.log('data recommend proudct', recommendProducts);\n  }, [recommendProductIds]);\n\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [product]);\n\n  return (\n    <Helmet title=\"title of books\">\n      <Section>\n        <SectionBody>\n          {product && <ProductView product={product} />}\n        </SectionBody>\n      </Section>\n      <Section>\n        <SectionTitle>Gợi ý riêng cho bạn</SectionTitle>\n        <SectionBody>\n          <Grid col={4} mdCol={2} smCol={1} gap={20}>\n            {recommendProducts &&\n              recommendProducts.map((item, index) => (\n                <ProductCard\n                  key={index}\n                  img01={item.image_url}\n                  img02={item.image_url}\n                  name={item.name}\n                  price={Number(item.price)}\n                  slug={item.id}\n                />\n              ))}\n          </Grid>\n        </SectionBody>\n      </Section>\n    </Helmet>\n  );\n};\n\nexport default Product;\n","/Users/linhleba/Desktop/ToLiShop/src/pages/Catalog.jsx",["314","315","316","317","318"],"import React, { useCallback, useState, useEffect, useRef } from 'react';\n\nimport Helmet from '../components/Helmet';\nimport CheckBox from '../components/CheckBox';\n\nimport productData from '../assets/fake-data/products';\n// import category from '../assets/fake-data/category';\nimport colors from '../assets/fake-data/product-color';\nimport size from '../assets/fake-data/product-size';\nimport Button from '../components/Button';\nimport InfinityList from '../components/InfinityList';\nimport * as api from '../api/index';\nimport apiCaller from '../utils/apiCaller';\n\nconst Catalog = () => {\n  const initFilter = {\n    category: [],\n    author: [],\n  };\n  const [category, setCategory] = useState([]);\n  const [author, setAuthor] = useState([]);\n\n  const [limitCategory, setLimitCategory] = useState(5);\n\n  const [limitAuthor, setLimitAuthor] = useState(5);\n  useEffect(() => {\n    apiCaller('api/category').then((res) => {\n      setCategory(res.data);\n    });\n    apiCaller('api/author').then((res) => {\n      setAuthor(res.data);\n    });\n  }, []);\n\n  // const productList = productData.getAllProducts();\n\n  const [products, setProducts] = useState(null);\n\n  const [filter, setFilter] = useState(initFilter);\n\n  useEffect(async () => {\n    const res = await api.getBook();\n    setProducts(res.data);\n  }, []);\n\n  const filterSelect = (type, checked, item) => {\n    console.log('item la', item);\n    if (checked) {\n      switch (type) {\n        case 'CATEGORY':\n          setFilter({\n            ...filter,\n            category: [...filter.category, item],\n          });\n          break;\n\n        case 'AUTHOR':\n          setFilter({\n            ...filter,\n            author: [...filter.author, item],\n          });\n          break;\n        default:\n      }\n    } else {\n      switch (type) {\n        case 'CATEGORY':\n          const newCategory = filter.category.filter((e) => e !== item);\n          setFilter({ ...filter, category: newCategory });\n          break;\n        case 'AUTHOR':\n          const newAuthor = filter.author.filter((e) => e !== item);\n          setFilter({ ...filter, author: newAuthor });\n          break;\n        default:\n      }\n    }\n  };\n\n  const clearFilter = () => setFilter(initFilter);\n\n  const updateProducts = useCallback(async () => {\n    // let temp = productList;\n\n    // if (filter.category.length > 0) {\n    //   temp = temp.filter((e) => filter.category.includes(e.categorySlug));\n    // }\n\n    // if (filter.color.length > 0) {\n    //   temp = temp.filter((e) => {\n    //     const check = e.colors.find((color) => filter.color.includes(color));\n    //     return check !== undefined;\n    //   });\n    // }\n\n    // if (filter.size.length > 0) {\n    //   temp = temp.filter((e) => {\n    //     const check = e.size.find((size) => filter.size.includes(size));\n    //     return check !== undefined;\n    //   });\n    // }\n\n    if (filter.category.length > 0) {\n      // console.log(filter.category[0]);\n      let temp = [];\n\n      console.log('filter', filter.category);\n\n      // setProducts([]);\n      await Promise.all(\n        filter.category.map(async (item) => {\n          // console.log('item id la:', item);\n          await apiCaller(`api/book/filterCategory/${item.id}`).then((res) => {\n            console.log(res);\n            // temp.push(res?.data);\n            setProducts(res?.data);\n          });\n        }),\n      ).catch((err) => console.error(err));\n\n      console.log('temp la:', temp);\n\n      // setProducts(temp);\n      console.log('update product', products);\n    } else {\n      console.log('vao day');\n      const res = await api.getBook();\n      setProducts(res.data);\n    }\n\n    // setProducts(temp);\n  }, [filter]);\n\n  useEffect(() => {\n    updateProducts();\n  }, [updateProducts]);\n\n  const filterRef = useRef(null);\n\n  const showHideFilter = () => filterRef.current.classList.toggle('active');\n\n  return (\n    <Helmet title=\"Sản phẩm\">\n      <div className=\"catalog\">\n        <div className=\"catalog__filter\" ref={filterRef}>\n          <div\n            className=\"catalog__filter__close\"\n            onClick={() => showHideFilter()}\n          >\n            <i className=\"bx bx-left-arrow-alt\"></i>\n          </div>\n          <div className=\"catalog__filter__widget\">\n            <div className=\"catalog__filter__widget__title\">\n              danh mục sản phẩm\n            </div>\n            <div className=\"catalog__filter__widget__content\">\n              {category?.slice(0, limitCategory).map((item, index) => (\n                <div\n                  key={index}\n                  className=\"catalog__filter__widget__content__item\"\n                >\n                  <CheckBox\n                    label={item.name}\n                    onChange={(input) =>\n                      filterSelect('CATEGORY', input.checked, item)\n                    }\n                    checked={filter.category.includes(item)}\n                  />\n                </div>\n              ))}\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                setLimitCategory((prevLimit) => prevLimit + 5);\n              }}\n            >\n              Xem thêm\n            </Button>\n          </div>\n\n          <div className=\"catalog__filter__widget\">\n            <div className=\"catalog__filter__widget__title\">\n              Danh mục tác giả\n            </div>\n            <div className=\"catalog__filter__widget__content\">\n              {author?.slice(0, limitAuthor).map((item, index) => (\n                <div\n                  key={index}\n                  className=\"catalog__filter__widget__content__item\"\n                >\n                  <CheckBox\n                    label={item.name}\n                    onChange={(input) =>\n                      filterSelect('AUTHOR', input.checked, item)\n                    }\n                    checked={filter.author.includes(item)}\n                  />\n                </div>\n              ))}\n            </div>\n            <Button\n              size=\"sm\"\n              onClick={() => {\n                setLimitAuthor((prevLimit) => prevLimit + 5);\n              }}\n            >\n              Xem thêm\n            </Button>\n          </div>\n\n          <div className=\"catalog__filter__widget\">\n            <div className=\"catalog__filter__widget__content\">\n              <Button size=\"sm\" onClick={clearFilter}>\n                xóa bộ lọc\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div className=\"catalog__filter__toggle\">\n          <Button size=\"sm\" onClick={() => showHideFilter()}>\n            bộ lọc\n          </Button>\n        </div>\n        <div className=\"catalog__content\">\n          {products && <InfinityList data={products} />}\n        </div>\n      </div>\n    </Helmet>\n  );\n};\n\nexport default Catalog;\n","/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/hero-slider.js",[],"/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/policy.js",[],"/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/product-color.js",[],"/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/category.js",[],["319","320"],"/Users/linhleba/Desktop/ToLiShop/src/assets/fake-data/product-size.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/Section.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/CartItem.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/ProductCard.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/CheckBox.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/PolicyCard.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/Helmet.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/HeroSlider.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/InfinityList.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/api/index.js",["321","322"],"import apiCaller from '../utils/apiCaller';\nimport * as Config from '../constants/Config';\nimport axios from 'axios';\n\nexport const signIn = (formData) =>\n  apiCaller('api/account/login', 'post', formData);\nexport const signUp = (formData) =>\n  apiCaller('api/account/create', 'post', formData);\n\nexport const getBook = () => apiCaller('api/book', 'get');\nexport const findBook = (id) => apiCaller(`api/book/${id}`, 'get');\n","/Users/linhleba/Desktop/ToLiShop/src/utils/apiCaller.js",["323"],"import axios from 'axios';\nimport * as Config from '../constants/Config';\nimport React from 'react';\n\nconst apiCaller = (endpoint, method = 'GET', payload, headers = null) => {\n  return axios({\n    method: method,\n    url: `${Config.API_URL}/${endpoint}`,\n    data: payload,\n    headers: headers,\n    // headers: {\n    //   Cookie:\n    //     'refresh_jwt_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluMSIsImlhdCI6MTY0Njg5OTU4MSwiZXhwIjoxNjc4NDU3MTgxfQ.mM8kO3y2n-Icyy6N6uFBrkg0nphIEIOWu-xnD3PFNkE; cookie2=value; cookie3=value;',\n    // },\n    withCredentials: true,\n  }).catch(function (error) {\n    // handle error\n    return error;\n  });\n};\n\nexport default apiCaller;\n","/Users/linhleba/Desktop/ToLiShop/src/constants/Config.js",[],"/Users/linhleba/Desktop/ToLiShop/src/constants/config.local.js",[],"/Users/linhleba/Desktop/ToLiShop/src/utils/numberWithCommas.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/popup/PopUp.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/Controls.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/Input.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/DatePicker.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/Button.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/ActionButton.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/Alert.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/Checkbox.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/RadioGroup.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/controls/Select.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/login/Login.jsx",["324","325","326","327","328"],"import React, { useState } from 'react';\nimport './login.css';\nimport PropTypes from 'prop-types';\nimport callAPI from '../../utils/apiCaller';\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from '@material-ui/core';\nimport './login.css';\nimport useStyles from './style.js';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Controls from '../../components/controls/Controls';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './icon';\nimport { useDispatch } from 'react-redux';\n// import { AUTH } from '../../constants/actionTypes';\nimport { authenticate } from '../../redux/ducks/auth';\n// import { signIn, signUp } from '../../redux/actions/auth';\nimport { useHistory } from 'react-router-dom';\nimport * as api from '../../api/index';\nimport { setSnackbar } from '../../redux/ducks/snackbar';\n// require('dotenv').config();\n\nconst loginUser = async (credentials) => {\n  let res;\n  await callAPI('api/account/login', 'POST', credentials).then((response) => {\n    console.log(response);\n    res = response.data.access_jwt_token;\n    // return response;\n    // get data from call api\n    // setBooks(response.data);\n  });\n  return res;\n};\n// console.log('responseStatus', responseStatus);\n\nconst initialState = {\n  name: '',\n  username: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst Login = ({ setToken, setOpenPopup, urlDestination = '/' }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [form, setForm] = useState(initialState);\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n  // const [username, setUserName] = useState();\n  // const [password, setPassword] = useState();\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignedUp((prevIsSignedUp) => !prevIsSignedUp);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // const token = await loginUser({\n    //   username,\n    //   password,\n    // });\n    // setToken(token);\n    if (isSignedUp) {\n      // dispatch(signUp(form, history));\n      if (form.password === form.confirmPassword) {\n        const { data } = await api.signUp(form);\n        // console.log(data);\n        if (!data) {\n          dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n        } else {\n          // account is exsited\n          if (data.message != 'successfully created') {\n            dispatch(setSnackbar(true, 'error', 'Tên đăng nhập đã tồn tại!'));\n          } else {\n            const { data } = await api.signIn(form);\n            setToken(data.access_jwt_token);\n            dispatch(authenticate({ access_jwt_token: data.access_jwt_token }));\n            setOpenPopup(false);\n            history.push(urlDestination);\n            window.location.reload();\n          }\n        }\n      } else {\n        dispatch(setSnackbar(true, 'error', 'Mật khẩu không khớp'));\n      }\n    } else {\n      // console.log(form);\n      const { data } = await api.signIn(form);\n\n      if (!data) {\n        dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n      } else {\n        if (!data.access_jwt_token) {\n          dispatch(\n            setSnackbar(true, 'error', 'Thông tin đăng nhập không chính xác!'),\n          );\n        } else {\n          setToken(data.access_jwt_token);\n          dispatch(authenticate({ access_jwt_token: data.access_jwt_token }));\n          setOpenPopup(false);\n\n          history.push(urlDestination);\n          window.location.reload();\n        }\n      }\n      // dispatch(signIn(form, history));\n    }\n  };\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    const googleData = {\n      result,\n      token,\n    };\n\n    try {\n      dispatch(authenticate(googleData));\n\n      const profile = localStorage.getItem('profile');\n      const token = JSON.parse(profile).token;\n      const profileData = JSON.parse(profile).result;\n      let isExistedAccount = null;\n      await callAPI('api/account/loginGoogle', 'post', { token: token }).then(\n        (res) => {\n          // console.log(res);\n          isExistedAccount = res.isExistedAccount;\n        },\n      );\n      if (!isExistedAccount) {\n        const payload = {\n          username: profileData.googleId,\n          password: profileData.email + 'ToLiShop',\n          photo: profileData.imageUrl,\n          name: profileData.name,\n          email: profileData.email,\n        };\n        const { data } = await api.signUp(payload);\n      }\n      // handle login\n      const { data } = await api.signIn({\n        username: profileData.googleId,\n        password: profileData.email + 'ToLiShop',\n      });\n      setToken(data.access_jwt_token);\n      dispatch(authenticate({ access_jwt_token: data.access_jwt_token }));\n\n      // sign up data in database\n      // const { res } = await api.signUp(form);\n      // // console.log(res);\n      // if (!res) {\n      //   dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n      // } else {\n      //   // account is exsited\n      //   if (res.message != 'successfully created') {\n      //     dispatch(setSnackbar(true, 'error', 'Tên đăng nhập đã tồn tại!'));\n      //   } else {\n      //     const { res } = await api.signIn(form);\n      //     setToken(res.access_jwt_token);\n      //     dispatch(authenticate({ access_jwt_token: res.access_jwt_token }));\n      //   }\n      // }\n\n      // history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => {\n    alert('Đã có lỗi xảy ra trong quá trình đăng nhập. Thử lại sau!');\n  };\n\n  const handleChange = (e) =>\n    setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className=\"main-container\">\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">\n          {isSignedUp ? 'Đăng kí' : 'Đăng nhập'}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {isSignedUp && (\n              <Input\n                name=\"name\"\n                label=\"Họ tên\"\n                autoFocus\n                handleChange={handleChange}\n              />\n            )}\n            <Input\n              name=\"username\"\n              label=\"Tên đăng nhập\"\n              type=\"text\"\n              handleChange={handleChange}\n            />\n            <Input\n              name=\"password\"\n              label=\"Mật khẩu\"\n              type={showPassword ? 'text' : 'password'}\n              handleShowPassword={handleShowPassword}\n              handleChange={handleChange}\n            />\n            {isSignedUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Nhập lại mật khẩu\"\n                // handleChange={handleChange}\n                type=\"password\"\n                handleChange={handleChange}\n              />\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignedUp ? 'Đăng kí' : 'Đăng nhập'}\n          </Button>\n          <GoogleLogin\n            clientId=\"760325754105-f20dtj8ttufvs00sufb4sc9fniq83apk.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Đăng nhập Google\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignedUp\n                  ? 'Đã có tài khoản? Đăng nhập'\n                  : 'Chưa có tài khoản? Đăng kí'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n","/Users/linhleba/Desktop/ToLiShop/src/components/login/style.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/login/Input.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/login/icon.js",[],"/Users/linhleba/Desktop/ToLiShop/src/redux/ducks/snackbar.js",["329"],"export const SET_SNACKBAR = 'ADMIN_PANEL/settings/SET_SNACKBAR';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarType: 'success',\n  snackbarMessage: '',\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SET_SNACKBAR:\n      const { snackbarOpen, snackbarMessage, snackbarType } = action;\n      // console.log('vao snackbar');\n      return {\n        ...state,\n        snackbarOpen,\n        snackbarType,\n        snackbarMessage,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const setSnackbar = (\n  snackbarOpen,\n  snackbarType = 'success',\n  snackbarMessage = '',\n) => ({\n  type: SET_SNACKBAR,\n  snackbarOpen,\n  snackbarType,\n  snackbarMessage,\n});\n","/Users/linhleba/Desktop/ToLiShop/src/redux/ducks/auth.js",["330"],"export const AUTHENTICATION = 'ADMIN_PANEL/settings/AUTHENTICATION';\nexport const LOGOUT = 'ADMIN_PANEL/settings/LOGOUT';\n\nconst initialState = {\n  authData: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case AUTHENTICATION:\n      console.log(action?.data);\n      localStorage.setItem('profile', JSON.stringify({ ...action?.data }));\n\n      return { ...state, authData: action.data, loading: false, errors: null };\n    case LOGOUT:\n      localStorage.clear();\n\n      return { ...state, authData: null, loading: false, errors: null };\n    default:\n      return state;\n  }\n};\n\nexport const authenticate = (data) => ({\n  type: AUTHENTICATION,\n  data,\n});\n\nexport const logout = () => ({\n  type: LOGOUT,\n});\n","/Users/linhleba/Desktop/ToLiShop/src/components/dropdown/dropdown.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/progress/Progress.jsx",["331","332"],"import React, { useState, useEffect } from 'react';\nimport './progress.css';\nimport * as ReactDOM from 'react-dom';\n\nconst Progress = ({ step }) => {\n  // const [step, setStep] = useState(2);\n  const [progress, setProgress] = useState(50);\n  const circles = document.querySelectorAll('.circle');\n\n  // setProgress(50);\n\n  // useEffect(() => {\n  //   circles.forEach((circle, index) => {\n  //     if (index <= step) {\n  //       circle.classList.add('active');\n  //     } else {\n  //       circle.classList.remove('active');\n  //     }\n  //   });\n  // }, []);\n\n  useEffect(() => {\n    console.log('circles', circles);\n    circles.forEach((circle, index) => {\n      console.log('vao day nua');\n      if (index <= step) {\n        circle.classList.add('active');\n      } else {\n        circle.classList.remove('active');\n      }\n    });\n    setProgress((step / circles.length) * 100);\n  }, [step]);\n\n  return (\n    <div className=\"progress__container\">\n      {/* <h1 className=\"progress-bar\">Step</h1> */}\n      <div className=\"progress-container\">\n        <div style={{ width: `${progress}%` }} className=\"progress\"></div>\n        <div className=\"progress-container__item\">\n          <div className=\"progress-text\">Đăng nhập</div>\n          <div className=\"circle active\">1</div>\n        </div>\n        <div className=\"progress-container__item\">\n          <div className=\"progress-text\">Địa chỉ giao hàng</div>\n          <div className=\"circle active\">2</div>\n        </div>\n        <div className=\"progress-container__item\">\n          <div className=\"progress-text\">Thanh toán</div>\n          <div className=\"circle\">3</div>\n        </div>\n        {/* <div className=\"progress-container__item\">\n          <div className=\"progress-text\">text 4</div>\n          <div className=\"circle \">4</div>\n        </div> */}\n      </div>\n\n      {/* <button\n        className=\"btn-primary\"\n        onClick={() => {\n          // console.log(circle);\n          if (step < circles.length) {\n            console.log(circles.length);\n            setStep((preStep) => preStep + 1);\n          }\n        }}\n      >\n        Sau\n      </button> */}\n    </div>\n  );\n};\n\nexport default Progress;\n","/Users/linhleba/Desktop/ToLiShop/src/components/Payment/Payment.jsx",["333","334","335","336"],"/Users/linhleba/Desktop/ToLiShop/src/pages/Order.jsx",["337","338"],"import React, { useState, useEffect } from 'react';\nimport Progress from '../components/progress/Progress';\nimport Payment from '../components/Payment/Payment';\nimport Shipping from '../components/shipping/Shipping';\n\nconst Order = () => {\n  const [step, setStep] = useState(2);\n  return (\n    <div>\n      <Progress step={step} />\n      {step == 2 ? <Shipping setStep={setStep} /> : <Payment />}\n    </div>\n  );\n};\n\nexport default Order;\n","/Users/linhleba/Desktop/ToLiShop/src/components/shipping/Shipping.jsx",["339","340"],"import React, { useState, useEffect } from 'react';\nimport './shipping.css';\nimport apiCaller from '../../utils/apiCaller';\nimport PopUp from '../popup/PopUp';\nimport ShipInfo from '../shipinfo/ShipInfo';\nimport { useHistory } from 'react-router-dom';\n\nconst Shipping = ({ setStep }) => {\n  const history = useHistory();\n  const [openPopup, setOpenPopup] = useState(false);\n  const [info, setInfo] = useState([]);\n  useEffect(async () => {\n    let profile = localStorage.getItem('profile');\n    let access_jwt_token = JSON.parse(profile)?.access_jwt_token;\n    // console.log('access_token is', access_jwt_token);\n    await apiCaller('api/account/info', 'get', null, {\n      authorization: access_jwt_token,\n    }).then((res) => {\n      // console.log('ket qua tra ve hien tai', res);\n      setInfo({\n        username: res?.data?.username ? res.data.username : history.push('/'),\n        name: res?.data?.name ? res.data.name : 'Chưa xác định',\n        address: res?.data?.address ? res.data.address : 'Chưa xác định',\n        phone: res?.data?.telephone ? res.data.telephone : 'Chưa xác định',\n      });\n    });\n    // console.log('info is', info);\n  }, []);\n  const handleEdit = () => {\n    setOpenPopup(true);\n  };\n  return (\n    <div className=\"shipping-container\">\n      <h2 className=\"shipping-container__tittle\">Địa chỉ giao hàng</h2>\n      <h4 className=\"shipping-container__options\">Chọn địa chỉ giao hàng</h4>\n      <div className=\"address-list \">\n        <p className=\"shipping__name\">{info.name}</p>\n        <p className=\"shipping__address\">Địa chỉ: {info.address}</p>\n        <p className=\"shipping__phone\">Số điện thoại: +84{info.phone}</p>\n        <div className=\"shipping__action\">\n          <button\n            type=\"submit\"\n            class=\"btn saving-address bg-main\"\n            onClick={() => {\n              setStep((preStep) => preStep + 1);\n            }}\n          >\n            Xác nhận\n          </button>\n          <button\n            type=\"button\"\n            class=\"edit-address bg-main\"\n            onClick={handleEdit}\n          >\n            Sửa\n          </button>\n        </div>\n      </div>\n      <PopUp\n        // title=\"Đăng nhập\"\n        isTitle=\"false\"\n        openPopup={openPopup}\n        setOpenPopup={setOpenPopup}\n      >\n        <ShipInfo setInfo={setInfo} setOpenPopup={setOpenPopup} />\n      </PopUp>\n    </div>\n  );\n};\n\nexport default Shipping;\n","/Users/linhleba/Desktop/ToLiShop/src/pages/Password.jsx",["341","342","343","344","345"],"import React from 'react';\nimport Controls from '../components/controls/Controls';\nimport { Grid, TextField } from '@material-ui/core';\nimport { useForm, Form } from '../components/useForm/useForm';\nimport { useDispatch } from 'react-redux';\nimport { setSnackbar } from '../redux/ducks/snackbar';\nimport callAPI from '../utils/apiCaller';\n\nconst Password = () => {\n  const dispatch = useDispatch();\n  const initialFValues = {\n    oldPass: '',\n    newPass: '',\n    reconfirmNewPass: '',\n  };\n\n  //   const { handleInfo } = props;\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n    if ('oldPass' in fieldValues)\n      temp.oldPass = fieldValues.oldPass\n        ? ''\n        : 'Trường này không được để trống.';\n    if ('newPass' in fieldValues)\n      temp.newPass = fieldValues.newPass\n        ? ''\n        : 'Trường này không được để trống.';\n    if ('reconfirmNewPass' in fieldValues)\n      temp.reconfirmNewPass = fieldValues.reconfirmNewPass\n        ? ''\n        : 'Trường này không được để trống.';\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\n  };\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\n    useForm(initialFValues, true, validate);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validate()) {\n      // Check newPassword is matched or not\n      if (values.newPass != values.reconfirmNewPass) {\n        dispatch(setSnackbar(true, 'error', 'Mật khẩu mới không khớp!'));\n      } else {\n        let profile = localStorage.getItem('profile');\n        let access_jwt_token = JSON.parse(profile).access_jwt_token;\n        await callAPI(\n          'api/account/changepassword',\n          'put',\n          {\n            password: values.oldPass,\n            newPassword: values.newPass,\n          },\n          {\n            authorization: access_jwt_token,\n          },\n        ).then((res) => {\n          if (res.data.data) {\n            // console.log(res);\n            dispatch(\n              setSnackbar(true, 'success', 'Thay đổi mật khẩu thành công!'),\n            );\n            resetForm();\n          } else {\n            // console.log(res);\n            dispatch(setSnackbar(true, 'error', 'Mật khẩu cũ không đúng!'));\n          }\n        });\n      }\n\n      // addOrEdit(values, resetForm);\n      // handle posts\n      //   handleInfo(values, resetForm);\n    }\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2> Đổi mật khẩu </h2>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            name=\"oldPass\"\n            label=\"Mật khẩu hiện tại\"\n            value={values.oldPass}\n            type=\"password\"\n            onChange={handleInputChange}\n            error={errors.oldPass}\n          />\n          <Controls.Input\n            name=\"newPass\"\n            label=\"Mật khẩu mới\"\n            value={values.newPass}\n            type=\"password\"\n            onChange={handleInputChange}\n            error={errors.newPass}\n          />\n          <Controls.Input\n            name=\"reconfirmNewPass\"\n            label=\"Xác nhận mật khẩu mới\"\n            value={values.reconfirmNewPass}\n            type=\"password\"\n            onChange={handleInputChange}\n            error={errors.reconfirmNewPass}\n          />\n        </Grid>\n      </Grid>\n      <Controls.Button type=\"submit\" text=\"Lưu thay đổi\" />\n      <Controls.Button\n        text=\"Đặt lại\"\n        color=\"default\"\n        onClick={() => resetForm()}\n      />\n    </Form>\n  );\n};\n\nexport default Password;\n","/Users/linhleba/Desktop/ToLiShop/src/pages/Profile.jsx",["346","347","348","349","350","351","352","353","354"],"import React, { useState, useEffect } from 'react';\nimport Controls from '../components/controls/Controls';\nimport { Grid, TextField } from '@material-ui/core';\nimport { useForm, Form } from '../components/useForm/useForm';\nimport { useDispatch } from 'react-redux';\nimport { setSnackbar } from '../redux/ducks/snackbar';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport callAPI from '../utils/apiCaller';\nimport Axios from 'axios';\nimport './profile.css';\nimport * as ImageConfig from '../constants/ImageConfig';\n\n// const URL_UPLOAD_IMAGE =\n//   'http://api.cloudinary.com/v1_1/dr6oretlc/image/upload';\n\n// const NAME_UPLOAD_PRESET = 'avatarprofile';\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const [initialFValues, setInitialFValues] = useState({\n    username: '',\n    name: '',\n    email: '',\n    phone: '',\n    address: '',\n    photo: null,\n  });\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n\n    if ('email' in fieldValues) {\n      temp.email = /$^|.+@.+..+/.test(fieldValues.email)\n        ? ''\n        : 'Định dạng email không hợp lệ.';\n    }\n    if ('phone' in fieldValues) {\n      if (!fieldValues.phone) {\n        temp.phone = '';\n      } else {\n        temp.phone =\n          fieldValues.phone.length > 8 ? '' : 'Số điện thoại không hợp lệ.';\n      }\n    }\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\n  };\n\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\n    useForm(initialFValues, true, validate);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validate()) {\n      const payload = {\n        name: values.name,\n        email: values.email,\n        telephone: values.phone,\n        address: values.address,\n        photo: values.photo,\n      };\n      let profile = localStorage.getItem('profile');\n      let access_jwt_token = JSON.parse(profile).access_jwt_token;\n      await callAPI('api/account/update', 'put', payload, {\n        authorization: access_jwt_token,\n      }).then((res) => {\n        if (res.status == 200) {\n          dispatch(\n            setSnackbar(true, 'success', 'Cập nhật thông tin thành công!'),\n          );\n        } else {\n          dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra!'));\n        }\n      });\n    }\n  };\n  const uploadImage = (file) => {\n    const formData = new FormData();\n    formData.append('file', file[0]);\n\n    formData.append('upload_preset', ImageConfig.NAME_UPLOAD_PRESET);\n\n    Axios.post(ImageConfig.URL_UPLOAD_IMAGE, formData).then((res) => {\n      setValues({\n        ...values,\n        ['photo']: res.data.url,\n      });\n    });\n  };\n\n  useEffect(async () => {\n    let profile = localStorage.getItem('profile');\n    let access_jwt_token = JSON.parse(profile).access_jwt_token;\n    await callAPI('api/account/info', 'get', null, {\n      authorization: access_jwt_token,\n    }).then((res) => {\n      setValues({\n        username: res.data.username,\n        name: res.data.name ? res.data.name : '',\n        email: res.data.email ? res.data.email : '',\n        phone: res.data.telephone ? res.data.telephone : '',\n        address: res.data.address ? res.data.address : '',\n        photo: res.data.photo ? res.data.photo : null,\n      });\n    });\n  }, []);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2>Thông tin cá nhân </h2>\n      <Grid container>\n        <Grid item xs={6}>\n          <Controls.Input\n            disabled\n            name=\"username\"\n            label=\"Tên tài khoản\"\n            value={values.username}\n            // variant=\"filled\"\n          />\n          <Controls.Input\n            name=\"name\"\n            label=\"Họ tên\"\n            value={values.name}\n            onChange={handleInputChange}\n            error={errors.name}\n          />\n          <Controls.Input\n            name=\"email\"\n            label=\"Email\"\n            value={values.email}\n            onChange={handleInputChange}\n            error={errors.email}\n          />\n          <Controls.Input\n            name=\"phone\"\n            type=\"tel\"\n            label=\"Số điện thoại\"\n            value={values.phone}\n            onChange={handleInputChange}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">+84</InputAdornment>\n              ),\n            }}\n            error={errors.phone}\n          />\n          <Controls.Input\n            name=\"address\"\n            label=\"Địa chỉ\"\n            value={values.address}\n            onChange={handleInputChange}\n            error={errors.address}\n          />\n        </Grid>\n        <Grid container item xs={6} className=\"gridContainer\">\n          <div className=\"photo-info\">\n            {values.photo ? (\n              <img\n                src={values.photo}\n                alt=\"Album Art\"\n                className=\"userImageInfo\"\n              />\n            ) : (\n              <img\n                src=\"https://cdn-icons-png.flaticon.com/512/149/149071.png\"\n                alt=\"Album Art\"\n                className=\"userImageInfo\"\n              />\n            )}\n            <input\n              name=\"photo\"\n              type=\"file\"\n              label=\"Ảnh đại diện\"\n              // value={values.photo}\n              onChange={(e) => uploadImage(e.target.files)}\n              // error={errors.address}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <Controls.Button type=\"submit\" text=\"Lưu thay đổi\" />\n      {/* <Controls.Button\n        text=\"Đặt lại\"\n        color=\"default\"\n        onClick={() => resetForm()}\n      /> */}\n    </Form>\n  );\n};\n\nexport default Profile;\n","/Users/linhleba/Desktop/ToLiShop/src/constants/ImageConfig.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/useForm/useForm.jsx",["355"],"import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport FormatPrice from '../../utils/formatPrice/formatPrice';\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    // validate while changing input\n    if (validateOnChange) {\n      validate({ [name]: value });\n    }\n  };\n  const handleInputPrice = (e) => {\n    const { name, value } = e.target;\n    // console.log('value price', value);\n    const n = parseInt(value.replace(/\\D/g, ''), 10);\n    const formatValue = !n ? 0 : n.toLocaleString();\n    setValues({\n      ...values,\n      [name]: formatValue,\n      // validate while changing input\n      if(validateOnChange) {\n        validate({ [name]: formatValue });\n      },\n    });\n  };\n\n  const handleAutoCompleteChange = (e, vals) => {\n    const id = e.target.id.split('-');\n    // format id: categories-option-0 => get the first value\n    const name = id[0];\n    setValues({\n      ...values,\n      [name]: vals,\n    });\n    // validate while changing input\n    // if (validateOnChange) validate({ [name]: vals });\n  };\n\n  const handleCreatableInput = (field, value) => {\n    // const id = e.target.id.split('-');\n    // format id: categories-option-0 => get the first value\n    const name = value.name;\n    setValues({\n      ...values,\n      [name]: field,\n    });\n    // validate while changing input\n    // if (validateOnChange) validate({ [name]: vals });\n  };\n\n  const resetForm = () => {\n    // set the initial values and no errors\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    handleAutoCompleteChange,\n    handleCreatableInput,\n    resetForm,\n    handleInputPrice,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport function Form(props) {\n  const classes = useStyles();\n  const { children, ...other } = props;\n  return (\n    <form className={classes.root} autoComplete=\"off\" {...other}>\n      {props.children}\n    </form>\n  );\n}\n","/Users/linhleba/Desktop/ToLiShop/src/utils/formatPrice/formatPrice.js",[],"/Users/linhleba/Desktop/ToLiShop/src/components/snackbar/SnackBar.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/shipinfo/ShipInfo.jsx",["356","357","358","359","360","361","362","363","364","365"],"import React, { useState, useEffect } from 'react';\nimport Controls from '../controls/Controls';\nimport { Grid, TextField } from '@material-ui/core';\nimport { useForm, Form } from '../useForm/useForm';\nimport { useDispatch } from 'react-redux';\nimport { setSnackbar } from '../../redux/ducks/snackbar';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport callAPI from '../../utils/apiCaller';\nimport Axios from 'axios';\nimport './shipinfo.css';\nimport * as ImageConfig from '../../constants/ImageConfig';\n\n// const URL_UPLOAD_IMAGE =\n//   'http://api.cloudinary.com/v1_1/dr6oretlc/image/upload';\n\n// const NAME_UPLOAD_PRESET = 'avatarprofile';\nconst ShipInfo = ({ setInfo, setOpenPopup }) => {\n  const dispatch = useDispatch();\n  const [initialFValues, setInitialFValues] = useState({\n    username: '',\n    name: '',\n\n    phone: '',\n    address: '',\n  });\n  const validate = (fieldValues = values) => {\n    let temp = { ...errors };\n\n    if ('phone' in fieldValues) {\n      if (!fieldValues.phone) {\n        temp.phone = '';\n      } else {\n        temp.phone =\n          fieldValues.phone.length > 8 ? '' : 'Số điện thoại không hợp lệ.';\n      }\n    }\n\n    setErrors({\n      ...temp,\n    });\n\n    if (fieldValues == values) return Object.values(temp).every((x) => x == '');\n  };\n\n  const { values, setValues, errors, setErrors, handleInputChange, resetForm } =\n    useForm(initialFValues, true, validate);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (validate()) {\n      const payload = {\n        name: values.name,\n        // email: values.email,\n        telephone: values.phone,\n        address: values.address,\n        // photo: values.photo,\n      };\n      let profile = localStorage.getItem('profile');\n      let access_jwt_token = JSON.parse(profile).access_jwt_token;\n      await callAPI('api/account/update', 'put', payload, {\n        authorization: access_jwt_token,\n      }).then((res) => {\n        if (res.status == 200) {\n          dispatch(\n            setSnackbar(true, 'success', 'Cập nhật thông tin thành công!'),\n          );\n          setInfo({\n            name: values.name ? values.name : 'Chưa xác định',\n            address: values.address ? values.address : 'Chưa xác định',\n            phone: values.phone ? values.phone : 'Chưa xác định',\n          });\n          setOpenPopup(false);\n        } else {\n          dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra!'));\n        }\n      });\n    }\n  };\n  //   const uploadImage = (file) => {\n  //     const formData = new FormData();\n  //     formData.append('file', file[0]);\n\n  //     formData.append('upload_preset', ImageConfig.NAME_UPLOAD_PRESET);\n\n  //     Axios.post(ImageConfig.URL_UPLOAD_IMAGE, formData).then((res) => {\n  //       setValues({\n  //         ...values,\n  //         ['photo']: res.data.url,\n  //       });\n  //     });\n  //   };\n\n  useEffect(async () => {\n    let profile = localStorage.getItem('profile');\n    let access_jwt_token = JSON.parse(profile).access_jwt_token;\n    await callAPI('api/account/info', 'get', null, {\n      authorization: access_jwt_token,\n    }).then((res) => {\n      setValues({\n        username: res.data.username,\n        name: res.data.name ? res.data.name : '',\n        email: res.data.email ? res.data.email : '',\n        phone: res.data.telephone ? res.data.telephone : '',\n        address: res.data.address ? res.data.address : '',\n        photo: res.data.photo ? res.data.photo : null,\n      });\n    });\n  }, []);\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <h2>Thông tin giao hàng </h2>\n      <Grid container>\n        <Controls.Input\n          disabled\n          name=\"username\"\n          label=\"Tên tài khoản\"\n          value={values.username}\n          // variant=\"filled\"\n        />\n        <Controls.Input\n          name=\"name\"\n          label=\"Họ tên\"\n          value={values.name}\n          onChange={handleInputChange}\n          error={errors.name}\n        />\n        <Controls.Input\n          name=\"phone\"\n          type=\"tel\"\n          label=\"Số điện thoại\"\n          value={values.phone}\n          onChange={handleInputChange}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">+84</InputAdornment>\n            ),\n          }}\n          error={errors.phone}\n        />\n        <Controls.Input\n          name=\"address\"\n          label=\"Địa chỉ\"\n          value={values.address}\n          onChange={handleInputChange}\n          error={errors.address}\n        />\n      </Grid>\n\n      <Controls.Button type=\"submit\" text=\"Lưu thay đổi\" />\n      {/* <Controls.Button\n        text=\"Đặt lại\"\n        color=\"default\"\n        onClick={() => resetForm()}\n      /> */}\n    </Form>\n  );\n};\n\nexport default ShipInfo;\n","/Users/linhleba/Desktop/ToLiShop/src/pages/History.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/transaction/Transaction.jsx",["366","367","368","369","370","371","372","373","374","375"],"import React, { useState, useEffect } from 'react';\nimport './transaction.css';\nimport apiCaller from '../../utils/apiCaller';\nimport numberWithCommas from '../../utils/numberWithCommas';\n\nconst Transaction = () => {\n  const [transactions, setTransactions] = useState(null);\n  const [books, setBooks] = useState([]);\n  const [tab, setTab] = useState(1);\n\n  const queryParams = new URLSearchParams(window.location.search);\n\n  // console.log('helloam', useParams());\n  // // console.log('test', useParams());\n  // if (id) {\n  //   console.log('hell', id);\n  // }\n  useEffect(async () => {\n    let profile = localStorage.getItem('profile');\n    let access_jwt_token = JSON.parse(profile)?.access_jwt_token;\n    await apiCaller('api/transaction/history', 'get', null, {\n      authorization: access_jwt_token,\n    }).then(async (res) => {\n      console.log('data transaction', res.data);\n      setTransactions(res.data);\n      // let transaction = new Promise(function (resolve, reject) {\n      //   resolve(res.data.transaction_detail);\n      // });\n      // const detailBooks = await transaction;\n      // console.log(detailBooks);\n      res.data.map(async (item, index) => {\n        item.transaction_detail.map(async (detail, index) => {\n          await apiCaller(`api/book/${detail.book_id}`, 'get', null).then(\n            (res) => {\n              setBooks((prevBook) => ({\n                ...prevBook,\n                [res.data.id]: {\n                  name: res.data.name,\n                  image_url: res.data.image_url,\n                },\n              }));\n            },\n          );\n        });\n      });\n    });\n\n    // Handle trans momo\n    const payload = {\n      partnerCode: queryParams.get('partnerCode'),\n      orderId: queryParams.get('orderId'),\n      requestId: queryParams.get('requestId'),\n      amount: queryParams.get('amount'),\n      orderInfo: queryParams.get('orderInfo'),\n      orderType: queryParams.get('orderType'),\n      transId: queryParams.get('transId'),\n      resultCode: queryParams.get('resultCode'),\n      message: queryParams.get('message'),\n      payType: queryParams.get('payType'),\n      responseTime: queryParams.get('responseTime'),\n      extraData: queryParams.get('extraData'),\n      signature: queryParams.get('signature'),\n    };\n\n    apiCaller('api/transaction/updatestatusmomo', 'put', payload).then(\n      (res) => {\n        console.log('res', res);\n      },\n    );\n  }, []);\n\n  const handleActiveClass = (e) => {\n    var elems = document.querySelectorAll('.active-transaction');\n    [].forEach.call(elems, function (el) {\n      el.classList.remove('active-transaction');\n    });\n    e.target.className = 'active-transaction';\n  };\n\n  const handleDisplayTransaction = (type) => {\n    return transactions\n      .filter((item) => item.status == type)\n      .map((transaction, index) => {\n        console.log('index');\n        return (\n          <div className=\"transaction__item-layout\">\n            <div className=\"item-layout__header\">\n              <span className=\"item-layout__header-tittle\">\n                {transaction.status == 1 ? 'Đã giao' : 'Chưa giao'}\n              </span>\n              <br></br>\n              <span>Mã đơn: {transaction.id}</span>\n            </div>\n            {transaction.transaction_detail.map((item, index) => (\n              <div className=\"transaction__item-details\">\n                <div className=\"item-layout__body-detail\">\n                  <div\n                    className=\"item-layout__product-image\"\n                    style={{\n                      backgroundImage: `url(\"${\n                        books[item.book_id]?.image_url\n                      }\")`,\n                    }}\n                  >\n                    <span class=\"item-layout__product-quantity\">\n                      x{item.quantity}\n                    </span>\n                  </div>\n                  <div class=\"product-info\">\n                    <p class=\"product-name\">{books[item.book_id]?.name}</p>\n                    <div class=\"store\">\n                      <span class=\"store-info__name\">ToLiShop</span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"transaction__item-price\">\n                  <span>{numberWithCommas(item.price_total)}</span>\n                </div>\n              </div>\n            ))}\n\n            <div className=\"transaction__item-footer\">\n              <div class=\"transaction__item-footer__total-money\">\n                <div class=\"transaction__item-footer__title\">Tổng tiền:</div>\n                <div class=\"transaction__item-footer__total\">\n                  {numberWithCommas(transaction.price_total)}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n      });\n  };\n\n  const handleDisplayTab = () => {\n    switch (tab) {\n      case 1:\n        return transactions.map((transaction, index) => {\n          console.log('index');\n          return (\n            <div className=\"transaction__item-layout\">\n              <div className=\"item-layout__header\">\n                <span className=\"item-layout__header-tittle\">\n                  {transaction.status == 1 ? 'Đã giao' : 'Chưa giao'}\n                </span>\n                <br></br>\n                <span>Mã đơn: {transaction.id}</span>\n              </div>\n              {transaction.transaction_detail.map((item, index) => (\n                <div className=\"transaction__item-details\">\n                  <div className=\"item-layout__body-detail\">\n                    <div\n                      className=\"item-layout__product-image\"\n                      style={{\n                        backgroundImage: `url(\"${\n                          books[item.book_id]?.image_url\n                        }\")`,\n                      }}\n                    >\n                      <span class=\"item-layout__product-quantity\">\n                        x{item.quantity}\n                      </span>\n                    </div>\n                    <div class=\"product-info\">\n                      <p class=\"product-name\">{books[item.book_id]?.name}</p>\n                      <div class=\"store\">\n                        <span class=\"store-info__name\">ToLiShop</span>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"transaction__item-price\">\n                    <span>{numberWithCommas(item.price_total)}</span>\n                  </div>\n                </div>\n              ))}\n\n              <div className=\"transaction__item-footer\">\n                <div class=\"transaction__item-footer__total-money\">\n                  <div class=\"transaction__item-footer__title\">Tổng tiền:</div>\n                  <div class=\"transaction__item-footer__total\">\n                    {numberWithCommas(transaction.price_total)}\n                  </div>\n                </div>\n              </div>\n            </div>\n          );\n        });\n        break;\n      case 2:\n        return handleDisplayTransaction(0);\n        break;\n\n      case 3:\n        return handleDisplayTransaction(1);\n        break;\n    }\n  };\n\n  const testTabAgain = () => {\n    return 'hello';\n  };\n\n  // useEffect(() => {\n  //   console.log('bookk is', books);\n  // }, [books]);\n\n  //   const getBookName = async (id) => {\n  //     let name = 'abc';\n  //     await apiCaller(`api/book/${id}`, 'get', null).then((res) => {\n  //       name = res.data.name;\n  //       console.log('res data name', res.data.name);\n  //     });\n  //     return name;\n\n  //     // return 'abc';\n  //   };\n  return (\n    transactions && (\n      <div>\n        <div className=\"transaction-container\">\n          <h3 className=\"tittle__heading\">Đơn hàng của tôi</h3>\n          <div className=\"transaction-container__tab\">\n            <div\n              className=\"transaction__all-order active-transaction\"\n              onClick={(e) => {\n                setTab(1);\n                handleActiveClass(e);\n              }}\n            >\n              Tất cả đơn\n            </div>\n            <div\n              className=\"transaction__shipping-order\"\n              onClick={(e) => {\n                setTab(2);\n                handleActiveClass(e);\n              }}\n            >\n              Chưa giao\n            </div>\n            <div\n              className=\"transaction__shipped-order\"\n              onClick={(e) => {\n                setTab(3);\n                handleActiveClass(e);\n              }}\n            >\n              Đã giao\n            </div>\n          </div>\n          {handleDisplayTab()}\n        </div>\n      </div>\n    )\n  );\n};\n\nexport default Transaction;\n","/Users/linhleba/Desktop/ToLiShop/src/components/nganluong/NganLuong.jsx",[],"/Users/linhleba/Desktop/ToLiShop/src/components/momo/MoMo.jsx",[],{"ruleId":"376","replacedBy":"377"},{"ruleId":"378","replacedBy":"379"},{"ruleId":"380","severity":1,"message":"381","line":1,"column":10,"nodeType":"382","messageId":"383","endLine":1,"endColumn":24},{"ruleId":"384","severity":1,"message":"385","line":18,"column":7,"nodeType":"386","endLine":18,"endColumn":49},{"ruleId":"380","severity":1,"message":"387","line":48,"column":16,"nodeType":"382","messageId":"383","endLine":48,"endColumn":23},{"ruleId":"388","severity":1,"message":"389","line":52,"column":13,"nodeType":"390","endLine":67,"endColumn":4},{"ruleId":"380","severity":1,"message":"391","line":11,"column":8,"nodeType":"382","messageId":"383","endLine":11,"endColumn":19},{"ruleId":"388","severity":1,"message":"389","line":21,"column":13,"nodeType":"390","endLine":26,"endColumn":4},{"ruleId":"380","severity":1,"message":"392","line":13,"column":8,"nodeType":"382","messageId":"383","endLine":13,"endColumn":24},{"ruleId":"380","severity":1,"message":"387","line":23,"column":16,"nodeType":"382","messageId":"383","endLine":23,"endColumn":23},{"ruleId":"380","severity":1,"message":"391","line":13,"column":8,"nodeType":"382","messageId":"383","endLine":13,"endColumn":19},{"ruleId":"380","severity":1,"message":"393","line":15,"column":8,"nodeType":"382","messageId":"383","endLine":15,"endColumn":14},{"ruleId":"388","severity":1,"message":"389","line":26,"column":13,"nodeType":"390","endLine":31,"endColumn":4},{"ruleId":"388","severity":1,"message":"394","line":31,"column":6,"nodeType":"395","endLine":31,"endColumn":8,"suggestions":"396"},{"ruleId":"397","severity":1,"message":"398","line":46,"column":26,"nodeType":"399","messageId":"400","endLine":46,"endColumn":28},{"ruleId":"380","severity":1,"message":"391","line":9,"column":8,"nodeType":"382","messageId":"383","endLine":9,"endColumn":19},{"ruleId":"380","severity":1,"message":"401","line":10,"column":13,"nodeType":"382","messageId":"383","endLine":10,"endColumn":16},{"ruleId":"388","severity":1,"message":"389","line":46,"column":13,"nodeType":"390","endLine":64,"endColumn":4},{"ruleId":"380","severity":1,"message":"391","line":6,"column":8,"nodeType":"382","messageId":"383","endLine":6,"endColumn":19},{"ruleId":"380","severity":1,"message":"402","line":8,"column":8,"nodeType":"382","messageId":"383","endLine":8,"endColumn":14},{"ruleId":"380","severity":1,"message":"403","line":9,"column":8,"nodeType":"382","messageId":"383","endLine":9,"endColumn":12},{"ruleId":"388","severity":1,"message":"389","line":41,"column":13,"nodeType":"390","endLine":44,"endColumn":4},{"ruleId":"388","severity":1,"message":"404","line":132,"column":6,"nodeType":"395","endLine":132,"endColumn":14,"suggestions":"405"},{"ruleId":"376","replacedBy":"406"},{"ruleId":"378","replacedBy":"407"},{"ruleId":"380","severity":1,"message":"408","line":2,"column":13,"nodeType":"382","messageId":"383","endLine":2,"endColumn":19},{"ruleId":"380","severity":1,"message":"409","line":3,"column":8,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"380","severity":1,"message":"410","line":3,"column":8,"nodeType":"382","messageId":"383","endLine":3,"endColumn":13},{"ruleId":"380","severity":1,"message":"411","line":8,"column":3,"nodeType":"382","messageId":"383","endLine":8,"endColumn":8},{"ruleId":"380","severity":1,"message":"412","line":16,"column":8,"nodeType":"382","messageId":"383","endLine":16,"endColumn":16},{"ruleId":"380","severity":1,"message":"413","line":29,"column":7,"nodeType":"382","messageId":"383","endLine":29,"endColumn":16},{"ruleId":"397","severity":1,"message":"414","line":82,"column":28,"nodeType":"399","messageId":"400","endLine":82,"endColumn":30},{"ruleId":"380","severity":1,"message":"415","line":148,"column":17,"nodeType":"382","messageId":"383","endLine":148,"endColumn":21},{"ruleId":"416","severity":1,"message":"417","line":9,"column":1,"nodeType":"418","endLine":23,"endColumn":3},{"ruleId":"416","severity":1,"message":"417","line":8,"column":1,"nodeType":"418","endLine":22,"endColumn":3},{"ruleId":"380","severity":1,"message":"419","line":3,"column":13,"nodeType":"382","messageId":"383","endLine":3,"endColumn":21},{"ruleId":"388","severity":1,"message":"420","line":33,"column":6,"nodeType":"395","endLine":33,"endColumn":12,"suggestions":"421"},{"ruleId":"380","severity":1,"message":"422","line":9,"column":10,"nodeType":"382","messageId":"383","endLine":9,"endColumn":14},{"ruleId":"388","severity":1,"message":"389","line":17,"column":13,"nodeType":"390","endLine":33,"endColumn":4},{"ruleId":"397","severity":1,"message":"398","line":61,"column":23,"nodeType":"399","messageId":"400","endLine":61,"endColumn":25},{"ruleId":"423","severity":1,"message":"424","line":199,"column":29,"nodeType":"386","endLine":202,"endColumn":31},{"ruleId":"380","severity":1,"message":"425","line":1,"column":27,"nodeType":"382","messageId":"383","endLine":1,"endColumn":36},{"ruleId":"397","severity":1,"message":"398","line":11,"column":13,"nodeType":"399","messageId":"400","endLine":11,"endColumn":15},{"ruleId":"388","severity":1,"message":"389","line":12,"column":13,"nodeType":"390","endLine":28,"endColumn":4},{"ruleId":"388","severity":1,"message":"426","line":28,"column":6,"nodeType":"395","endLine":28,"endColumn":8,"suggestions":"427"},{"ruleId":"380","severity":1,"message":"428","line":3,"column":16,"nodeType":"382","messageId":"383","endLine":3,"endColumn":25},{"ruleId":"397","severity":1,"message":"398","line":37,"column":21,"nodeType":"399","messageId":"400","endLine":37,"endColumn":23},{"ruleId":"397","severity":1,"message":"398","line":37,"column":74,"nodeType":"399","messageId":"400","endLine":37,"endColumn":76},{"ruleId":"380","severity":1,"message":"429","line":39,"column":19,"nodeType":"382","messageId":"383","endLine":39,"endColumn":28},{"ruleId":"397","severity":1,"message":"414","line":46,"column":26,"nodeType":"399","messageId":"400","endLine":46,"endColumn":28},{"ruleId":"380","severity":1,"message":"428","line":3,"column":16,"nodeType":"382","messageId":"383","endLine":3,"endColumn":25},{"ruleId":"380","severity":1,"message":"430","line":19,"column":26,"nodeType":"382","messageId":"383","endLine":19,"endColumn":43},{"ruleId":"397","severity":1,"message":"398","line":48,"column":21,"nodeType":"399","messageId":"400","endLine":48,"endColumn":23},{"ruleId":"397","severity":1,"message":"398","line":48,"column":74,"nodeType":"399","messageId":"400","endLine":48,"endColumn":76},{"ruleId":"380","severity":1,"message":"431","line":51,"column":68,"nodeType":"382","messageId":"383","endLine":51,"endColumn":77},{"ruleId":"397","severity":1,"message":"398","line":69,"column":24,"nodeType":"399","messageId":"400","endLine":69,"endColumn":26},{"ruleId":"432","severity":1,"message":"433","line":88,"column":9,"nodeType":"434","messageId":"435","endLine":88,"endColumn":32,"fix":"436"},{"ruleId":"388","severity":1,"message":"389","line":93,"column":13,"nodeType":"390","endLine":108,"endColumn":4},{"ruleId":"388","severity":1,"message":"437","line":108,"column":6,"nodeType":"395","endLine":108,"endColumn":8,"suggestions":"438"},{"ruleId":"380","severity":1,"message":"439","line":3,"column":8,"nodeType":"382","messageId":"383","endLine":3,"endColumn":19},{"ruleId":"380","severity":1,"message":"428","line":3,"column":16,"nodeType":"382","messageId":"383","endLine":3,"endColumn":25},{"ruleId":"380","severity":1,"message":"440","line":9,"column":8,"nodeType":"382","messageId":"383","endLine":9,"endColumn":13},{"ruleId":"380","severity":1,"message":"441","line":11,"column":13,"nodeType":"382","messageId":"383","endLine":11,"endColumn":24},{"ruleId":"380","severity":1,"message":"430","line":19,"column":26,"nodeType":"382","messageId":"383","endLine":19,"endColumn":43},{"ruleId":"397","severity":1,"message":"398","line":42,"column":21,"nodeType":"399","messageId":"400","endLine":42,"endColumn":23},{"ruleId":"397","severity":1,"message":"398","line":42,"column":74,"nodeType":"399","messageId":"400","endLine":42,"endColumn":76},{"ruleId":"380","severity":1,"message":"431","line":45,"column":68,"nodeType":"382","messageId":"383","endLine":45,"endColumn":77},{"ruleId":"397","severity":1,"message":"398","line":63,"column":24,"nodeType":"399","messageId":"400","endLine":63,"endColumn":26},{"ruleId":"388","severity":1,"message":"389","line":93,"column":13,"nodeType":"390","endLine":108,"endColumn":4},{"ruleId":"388","severity":1,"message":"437","line":108,"column":6,"nodeType":"395","endLine":108,"endColumn":8,"suggestions":"442"},{"ruleId":"388","severity":1,"message":"389","line":18,"column":13,"nodeType":"390","endLine":70,"endColumn":4},{"ruleId":"388","severity":1,"message":"443","line":70,"column":6,"nodeType":"395","endLine":70,"endColumn":8,"suggestions":"444"},{"ruleId":"397","severity":1,"message":"398","line":82,"column":37,"nodeType":"399","messageId":"400","endLine":82,"endColumn":39},{"ruleId":"397","severity":1,"message":"398","line":89,"column":37,"nodeType":"399","messageId":"400","endLine":89,"endColumn":39},{"ruleId":"445","severity":1,"message":"446","line":136,"column":5,"nodeType":"447","messageId":"448","endLine":196,"endColumn":6},{"ruleId":"397","severity":1,"message":"398","line":144,"column":39,"nodeType":"399","messageId":"400","endLine":144,"endColumn":41},{"ruleId":"449","severity":1,"message":"450","line":188,"column":9,"nodeType":"451","messageId":"452","endLine":188,"endColumn":15},{"ruleId":"449","severity":1,"message":"450","line":191,"column":9,"nodeType":"451","messageId":"452","endLine":191,"endColumn":15},{"ruleId":"449","severity":1,"message":"450","line":195,"column":9,"nodeType":"451","messageId":"452","endLine":195,"endColumn":15},{"ruleId":"380","severity":1,"message":"453","line":199,"column":9,"nodeType":"382","messageId":"383","endLine":199,"endColumn":21},"no-native-reassign",["454"],"no-negated-in-lhs",["455"],"no-unused-vars","'configureStore' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'productData' is defined but never used.","'numberWithCommas' is defined but never used.","'banner' is defined but never used.","React Hook useEffect has a missing dependency: 'books'. Either include it or remove the dependency array.","ArrayExpression",["456"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'api' is defined but never used.","'colors' is defined but never used.","'size' is defined but never used.","React Hook useCallback has a missing dependency: 'products'. Either include it or remove the dependency array.",["457"],["454"],["455"],"'Config' is defined but never used.","'axios' is defined but never used.","'React' is defined but never used.","'Paper' is defined but never used.","'Controls' is defined but never used.","'loginUser' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'ReactDOM' is defined but never used.","React Hook useEffect has a missing dependency: 'circles'. Either include it or remove the dependency array.",["458"],"'Link' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["459"],"'TextField' is defined but never used.","'setValues' is assigned a value but never used.","'setInitialFValues' is assigned a value but never used.","'resetForm' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['photo'] found.","Property","unnecessarilyComputedProperty",{"range":"460","text":"461"},"React Hook useEffect has a missing dependency: 'setValues'. Either include it or remove the dependency array.",["462"],"'FormatPrice' is defined but never used.","'Axios' is defined but never used.","'ImageConfig' is defined but never used.",["463"],"React Hook useEffect has a missing dependency: 'queryParams'. Either include it or remove the dependency array.",["464"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'testTabAgain' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"465","fix":"466"},{"desc":"467","fix":"468"},{"desc":"469","fix":"470"},{"desc":"471","fix":"472"},[2665,2674],"'photo'",{"desc":"473","fix":"474"},{"desc":"473","fix":"475"},{"desc":"476","fix":"477"},"Update the dependencies array to be: [books]",{"range":"478","text":"479"},"Update the dependencies array to be: [filter.category, products]",{"range":"480","text":"481"},"Update the dependencies array to be: [circles, step]",{"range":"482","text":"483"},"Update the dependencies array to be: [history]",{"range":"484","text":"485"},"Update the dependencies array to be: [setValues]",{"range":"486","text":"487"},{"range":"488","text":"487"},"Update the dependencies array to be: [queryParams]",{"range":"489","text":"490"},[1106,1108],"[books]",[3670,3678],"[filter.category, products]",[886,892],"[circles, step]",[1155,1157],"[history]",[3327,3329],"[setValues]",[3484,3486],[2420,2422],"[queryParams]"]