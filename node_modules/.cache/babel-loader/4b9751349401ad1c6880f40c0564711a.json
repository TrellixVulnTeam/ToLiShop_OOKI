{"ast":null,"code":"var _jsxFileName = \"/Users/linhleba/Desktop/ToLiShop/src/components/login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './login.css';\nimport PropTypes from 'prop-types';\nimport callAPI from '../../utils/apiCaller';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport './login.css';\nimport useStyles from './style.js';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Controls from '../../components/controls/Controls';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './icon';\nimport { useDispatch } from 'react-redux'; // import { AUTH } from '../../constants/actionTypes';\n\nimport { authenticate } from '../../redux/ducks/auth'; // import { signIn, signUp } from '../../redux/actions/auth';\n\nimport { useHistory } from 'react-router-dom';\nimport * as api from '../../api/index';\nimport { setSnackbar } from '../../redux/ducks/snackbar'; // require('dotenv').config();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst loginUser = async credentials => {\n  let res;\n  await callAPI('api/account/login', 'POST', credentials).then(response => {\n    console.log(response);\n    res = response.data.access_jwt_token; // return response;\n    // get data from call api\n    // setBooks(response.data);\n  });\n  return res;\n}; // console.log('responseStatus', responseStatus);\n\n\nconst initialState = {\n  name: '',\n  username: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Login = ({\n  setToken,\n  setOpenPopup\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [form, setForm] = useState(initialState);\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword); // const [username, setUserName] = useState();\n  // const [password, setPassword] = useState();\n\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignedUp(prevIsSignedUp => !prevIsSignedUp);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // const token = await loginUser({\n    //   username,\n    //   password,\n    // });\n    // setToken(token);\n\n    if (isSignedUp) {\n      // dispatch(signUp(form, history));\n      if (form.password === form.confirmPassword) {\n        const {\n          data\n        } = await api.signUp(form); // console.log(data);\n\n        if (!data) {\n          dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n        } else {\n          // account is exsited\n          if (data.message != 'successfully created') {\n            dispatch(setSnackbar(true, 'error', 'Tên đăng nhập đã tồn tại!'));\n          } else {\n            const {\n              data\n            } = await api.signIn(form);\n            setToken(data.access_jwt_token);\n            dispatch(authenticate({\n              access_jwt_token: data.access_jwt_token\n            }));\n            setOpenPopup(false);\n            history.push('/cart');\n          }\n        }\n      } else {\n        dispatch(setSnackbar(true, 'error', 'Mật khẩu không khớp'));\n      }\n    } else {\n      // console.log(form);\n      const {\n        data\n      } = await api.signIn(form);\n\n      if (!data) {\n        dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n      } else {\n        if (!data.access_jwt_token) {\n          dispatch(setSnackbar(true, 'error', 'Thông tin đăng nhập không chính xác!'));\n        } else {\n          setToken(data.access_jwt_token);\n          dispatch(authenticate({\n            access_jwt_token: data.access_jwt_token\n          }));\n          setOpenPopup(false); // history.push('/');\n        }\n      } // dispatch(signIn(form, history));\n\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n    const googleData = {\n      result,\n      token\n    };\n\n    try {\n      dispatch(authenticate(googleData));\n      const profile = localStorage.getItem('profile');\n      const token = JSON.parse(profile).token;\n      const profileData = JSON.parse(profile).result;\n      let isExistedAccount = null;\n      await callAPI('api/account/loginGoogle', 'post', {\n        token: token\n      }).then(res => {\n        // console.log(res);\n        isExistedAccount = res.isExistedAccount;\n      });\n\n      if (!isExistedAccount) {\n        const payload = {\n          username: profileData.googleId,\n          password: profileData.email + 'ToLiShop',\n          photo: profileData.imageUrl,\n          name: profileData.name,\n          email: profileData.email\n        };\n        const {\n          data\n        } = await api.signUp(payload);\n      } // handle login\n\n\n      const {\n        data\n      } = await api.signIn({\n        username: profileData.googleId,\n        password: profileData.email + 'ToLiShop'\n      });\n      setToken(data.access_jwt_token);\n      dispatch(authenticate({\n        access_jwt_token: data.access_jwt_token\n      })); // sign up data in database\n      // const { res } = await api.signUp(form);\n      // // console.log(res);\n      // if (!res) {\n      //   dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n      // } else {\n      //   // account is exsited\n      //   if (res.message != 'successfully created') {\n      //     dispatch(setSnackbar(true, 'error', 'Tên đăng nhập đã tồn tại!'));\n      //   } else {\n      //     const { res } = await api.signIn(form);\n      //     setToken(res.access_jwt_token);\n      //     dispatch(authenticate({ access_jwt_token: res.access_jwt_token }));\n      //   }\n      // }\n      // history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => {\n    alert('Đã có lỗi xảy ra trong quá trình đăng nhập. Thử lại sau!');\n  };\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignedUp ? 'Đăng kí' : 'Đăng nhập'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [isSignedUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"name\",\n            label: \"H\\u1ECD t\\xEAn\",\n            autoFocus: true,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"username\",\n            label: \"T\\xEAn \\u0111\\u0103ng nh\\u1EADp\",\n            type: \"text\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            label: \"M\\u1EADt kh\\u1EA9u\",\n            type: showPassword ? 'text' : 'password',\n            handleShowPassword: handleShowPassword,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), isSignedUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Nh\\u1EADp l\\u1EA1i m\\u1EADt kh\\u1EA9u\" // handleChange={handleChange}\n            ,\n            type: \"password\",\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignedUp ? 'Đăng kí' : 'Đăng nhập'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"760325754105-f20dtj8ttufvs00sufb4sc9fniq83apk.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 28\n            }, this),\n            variant: \"contained\",\n            children: \"\\u0110\\u0103ng nh\\u1EADp Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleError,\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignedUp ? 'Đã có tài khoản? Đăng nhập' : 'Chưa có tài khoản? Đăng kí'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"FU3A6/mRFIAWXRRFyqjzrvQkNsU=\", false, function () {\n  return [useDispatch, useHistory, useStyles];\n});\n\n_c = Login;\nexport default Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/linhleba/Desktop/ToLiShop/src/components/login/Login.jsx"],"names":["React","useState","PropTypes","callAPI","Avatar","Button","Paper","Grid","Typography","Container","useStyles","LockOutlinedIcon","Controls","Input","GoogleLogin","Icon","useDispatch","authenticate","useHistory","api","setSnackbar","loginUser","credentials","res","then","response","console","log","data","access_jwt_token","initialState","name","username","password","confirmPassword","Login","setToken","setOpenPopup","dispatch","history","classes","form","setForm","isSignedUp","setIsSignedUp","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignedUp","handleSubmit","e","preventDefault","signUp","message","signIn","push","googleSuccess","result","profileObj","token","tokenId","googleData","profile","localStorage","getItem","JSON","parse","profileData","isExistedAccount","payload","googleId","email","photo","imageUrl","error","googleError","alert","handleChange","target","value","avatar","submit","renderProps","googleButton","onClick","disabled","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './login.css';\nimport PropTypes from 'prop-types';\nimport callAPI from '../../utils/apiCaller';\nimport {\n  Avatar,\n  Button,\n  Paper,\n  Grid,\n  Typography,\n  Container,\n} from '@material-ui/core';\nimport './login.css';\nimport useStyles from './style.js';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Controls from '../../components/controls/Controls';\nimport Input from './Input';\nimport { GoogleLogin } from 'react-google-login';\nimport Icon from './icon';\nimport { useDispatch } from 'react-redux';\n// import { AUTH } from '../../constants/actionTypes';\nimport { authenticate } from '../../redux/ducks/auth';\n// import { signIn, signUp } from '../../redux/actions/auth';\nimport { useHistory } from 'react-router-dom';\nimport * as api from '../../api/index';\nimport { setSnackbar } from '../../redux/ducks/snackbar';\n// require('dotenv').config();\n\nconst loginUser = async (credentials) => {\n  let res;\n  await callAPI('api/account/login', 'POST', credentials).then((response) => {\n    console.log(response);\n    res = response.data.access_jwt_token;\n    // return response;\n    // get data from call api\n    // setBooks(response.data);\n  });\n  return res;\n};\n// console.log('responseStatus', responseStatus);\n\nconst initialState = {\n  name: '',\n  username: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst Login = ({ setToken, setOpenPopup }) => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const [form, setForm] = useState(initialState);\n  const [isSignedUp, setIsSignedUp] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n  // const [username, setUserName] = useState();\n  // const [password, setPassword] = useState();\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignedUp((prevIsSignedUp) => !prevIsSignedUp);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    // const token = await loginUser({\n    //   username,\n    //   password,\n    // });\n    // setToken(token);\n    if (isSignedUp) {\n      // dispatch(signUp(form, history));\n      if (form.password === form.confirmPassword) {\n        const { data } = await api.signUp(form);\n        // console.log(data);\n        if (!data) {\n          dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n        } else {\n          // account is exsited\n          if (data.message != 'successfully created') {\n            dispatch(setSnackbar(true, 'error', 'Tên đăng nhập đã tồn tại!'));\n          } else {\n            const { data } = await api.signIn(form);\n            setToken(data.access_jwt_token);\n            dispatch(authenticate({ access_jwt_token: data.access_jwt_token }));\n            setOpenPopup(false);\n            history.push('/cart');\n          }\n        }\n      } else {\n        dispatch(setSnackbar(true, 'error', 'Mật khẩu không khớp'));\n      }\n    } else {\n      // console.log(form);\n      const { data } = await api.signIn(form);\n\n      if (!data) {\n        dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n      } else {\n        if (!data.access_jwt_token) {\n          dispatch(\n            setSnackbar(true, 'error', 'Thông tin đăng nhập không chính xác!'),\n          );\n        } else {\n          setToken(data.access_jwt_token);\n          dispatch(authenticate({ access_jwt_token: data.access_jwt_token }));\n          setOpenPopup(false);\n          // history.push('/');\n        }\n      }\n      // dispatch(signIn(form, history));\n    }\n  };\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    const googleData = {\n      result,\n      token,\n    };\n\n    try {\n      dispatch(authenticate(googleData));\n\n      const profile = localStorage.getItem('profile');\n      const token = JSON.parse(profile).token;\n      const profileData = JSON.parse(profile).result;\n      let isExistedAccount = null;\n      await callAPI('api/account/loginGoogle', 'post', { token: token }).then(\n        (res) => {\n          // console.log(res);\n          isExistedAccount = res.isExistedAccount;\n        },\n      );\n      if (!isExistedAccount) {\n        const payload = {\n          username: profileData.googleId,\n          password: profileData.email + 'ToLiShop',\n          photo: profileData.imageUrl,\n          name: profileData.name,\n          email: profileData.email,\n        };\n        const { data } = await api.signUp(payload);\n      }\n      // handle login\n      const { data } = await api.signIn({\n        username: profileData.googleId,\n        password: profileData.email + 'ToLiShop',\n      });\n      setToken(data.access_jwt_token);\n      dispatch(authenticate({ access_jwt_token: data.access_jwt_token }));\n\n      // sign up data in database\n      // const { res } = await api.signUp(form);\n      // // console.log(res);\n      // if (!res) {\n      //   dispatch(setSnackbar(true, 'error', 'Đã có lỗi xảy ra'));\n      // } else {\n      //   // account is exsited\n      //   if (res.message != 'successfully created') {\n      //     dispatch(setSnackbar(true, 'error', 'Tên đăng nhập đã tồn tại!'));\n      //   } else {\n      //     const { res } = await api.signIn(form);\n      //     setToken(res.access_jwt_token);\n      //     dispatch(authenticate({ access_jwt_token: res.access_jwt_token }));\n      //   }\n      // }\n\n      // history.push('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => {\n    alert('Đã có lỗi xảy ra trong quá trình đăng nhập. Thử lại sau!');\n  };\n\n  const handleChange = (e) =>\n    setForm({ ...form, [e.target.name]: e.target.value });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className=\"main-container\">\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">\n          {isSignedUp ? 'Đăng kí' : 'Đăng nhập'}\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={3}>\n            {isSignedUp && (\n              <Input\n                name=\"name\"\n                label=\"Họ tên\"\n                autoFocus\n                handleChange={handleChange}\n              />\n            )}\n            <Input\n              name=\"username\"\n              label=\"Tên đăng nhập\"\n              type=\"text\"\n              handleChange={handleChange}\n            />\n            <Input\n              name=\"password\"\n              label=\"Mật khẩu\"\n              type={showPassword ? 'text' : 'password'}\n              handleShowPassword={handleShowPassword}\n              handleChange={handleChange}\n            />\n            {isSignedUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Nhập lại mật khẩu\"\n                // handleChange={handleChange}\n                type=\"password\"\n                handleChange={handleChange}\n              />\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignedUp ? 'Đăng kí' : 'Đăng nhập'}\n          </Button>\n          <GoogleLogin\n            clientId=\"760325754105-f20dtj8ttufvs00sufb4sc9fniq83apk.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n              >\n                Đăng nhập Google\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignedUp\n                  ? 'Đã có tài khoản? Đăng nhập'\n                  : 'Chưa có tài khoản? Đăng kí'}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n};\n\nexport default Login;\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired,\n};\n"]},"metadata":{},"sourceType":"module"}