{"ast":null,"code":"var _jsxFileName = \"/Users/linhleba/Desktop/ToLiShop/src/components/momo/MoMo.jsx\";\nimport React from 'react'; //https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\n//parameters\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar partnerCode = 'MOMOPH7P20220506';\nvar accessKey = 'XVRte2alScC3VDw4';\nvar secretkey = 'h8dvIeOePN2ubGd6nHh6jKrPeg5ZUP0L';\nvar requestId = partnerCode + new Date().getTime();\nvar orderId = requestId;\nvar orderInfo = 'pay with MoMo';\nvar redirectUrl = 'https://momo.vn/return';\nvar ipnUrl = 'https://callback.url/notify'; // var ipnUrl = redirectUrl = \"https://webhook.site/454e7b77-f177-4ece-8236-ddf1c26ba7f8\";\n\nvar amount = '50000';\nvar requestType = 'captureWallet';\nvar extraData = ''; //pass empty value if your merchant does not have stores\n//before sign HMAC SHA256 with format\n//accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\n\nvar rawSignature = 'accessKey=' + accessKey + '&amount=' + amount + '&extraData=' + extraData + '&ipnUrl=' + ipnUrl + '&orderId=' + orderId + '&orderInfo=' + orderInfo + '&partnerCode=' + partnerCode + '&redirectUrl=' + redirectUrl + '&requestId=' + requestId + '&requestType=' + requestType; //puts raw signature\n\nconsole.log('--------------------RAW SIGNATURE----------------');\nconsole.log(rawSignature); //signature\n\nconst crypto = require('crypto');\n\nvar signature = crypto.createHmac('sha256', secretkey).update(rawSignature).digest('hex');\nconsole.log('--------------------SIGNATURE----------------');\nconsole.log(signature); //json object send to MoMo endpoint\n\nconst requestBody = JSON.stringify({\n  partnerCode: partnerCode,\n  accessKey: accessKey,\n  requestId: requestId,\n  amount: amount,\n  orderId: orderId,\n  orderInfo: orderInfo,\n  redirectUrl: redirectUrl,\n  ipnUrl: ipnUrl,\n  extraData: extraData,\n  requestType: requestType,\n  signature: signature,\n  lang: 'en'\n}); //Create the HTTPS objects\n\nconst https = require('https');\n\nconst options = {\n  hostname: 'test-payment.momo.vn',\n  port: 443,\n  path: '/v2/gateway/api/create',\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Content-Length': Buffer.byteLength(requestBody)\n  }\n}; //Send the request and get the response\n\nconst req = https.request(options, res => {\n  console.log(`Status: ${res.statusCode}`);\n  console.log(`Headers: ${JSON.stringify(res.headers)}`);\n  res.setEncoding('utf8');\n  res.on('data', body => {\n    console.log('Body: ');\n    console.log(body);\n    console.log('payUrl: ');\n    console.log(JSON.parse(body).payUrl);\n  });\n  res.on('end', () => {\n    console.log('No more data in response.');\n  });\n});\nreq.on('error', e => {\n  console.log(`problem with request: ${e.message}`);\n}); // write data to request body\n\nconsole.log('Sending....');\nreq.write(requestBody);\nreq.end();\n\nconst MoMo = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MoMo\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 10\n  }, this);\n};\n\n_c = MoMo;\nexport default MoMo;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoMo\");","map":{"version":3,"sources":["/Users/linhleba/Desktop/ToLiShop/src/components/momo/MoMo.jsx"],"names":["React","partnerCode","accessKey","secretkey","requestId","Date","getTime","orderId","orderInfo","redirectUrl","ipnUrl","amount","requestType","extraData","rawSignature","console","log","crypto","require","signature","createHmac","update","digest","requestBody","JSON","stringify","lang","https","options","hostname","port","path","method","headers","Buffer","byteLength","req","request","res","statusCode","setEncoding","on","body","parse","payUrl","e","message","write","end","MoMo"],"mappings":"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","sourcesContent":["import React from 'react';\n\n//https://developers.momo.vn/#/docs/en/aiov2/?id=payment-method\n//parameters\nvar partnerCode = 'MOMOPH7P20220506';\nvar accessKey = 'XVRte2alScC3VDw4';\nvar secretkey = 'h8dvIeOePN2ubGd6nHh6jKrPeg5ZUP0L';\nvar requestId = partnerCode + new Date().getTime();\nvar orderId = requestId;\nvar orderInfo = 'pay with MoMo';\nvar redirectUrl = 'https://momo.vn/return';\nvar ipnUrl = 'https://callback.url/notify';\n// var ipnUrl = redirectUrl = \"https://webhook.site/454e7b77-f177-4ece-8236-ddf1c26ba7f8\";\nvar amount = '50000';\nvar requestType = 'captureWallet';\nvar extraData = ''; //pass empty value if your merchant does not have stores\n\n//before sign HMAC SHA256 with format\n//accessKey=$accessKey&amount=$amount&extraData=$extraData&ipnUrl=$ipnUrl&orderId=$orderId&orderInfo=$orderInfo&partnerCode=$partnerCode&redirectUrl=$redirectUrl&requestId=$requestId&requestType=$requestType\nvar rawSignature =\n  'accessKey=' +\n  accessKey +\n  '&amount=' +\n  amount +\n  '&extraData=' +\n  extraData +\n  '&ipnUrl=' +\n  ipnUrl +\n  '&orderId=' +\n  orderId +\n  '&orderInfo=' +\n  orderInfo +\n  '&partnerCode=' +\n  partnerCode +\n  '&redirectUrl=' +\n  redirectUrl +\n  '&requestId=' +\n  requestId +\n  '&requestType=' +\n  requestType;\n//puts raw signature\nconsole.log('--------------------RAW SIGNATURE----------------');\nconsole.log(rawSignature);\n//signature\nconst crypto = require('crypto');\nvar signature = crypto\n  .createHmac('sha256', secretkey)\n  .update(rawSignature)\n  .digest('hex');\nconsole.log('--------------------SIGNATURE----------------');\nconsole.log(signature);\n\n//json object send to MoMo endpoint\nconst requestBody = JSON.stringify({\n  partnerCode: partnerCode,\n  accessKey: accessKey,\n  requestId: requestId,\n  amount: amount,\n  orderId: orderId,\n  orderInfo: orderInfo,\n  redirectUrl: redirectUrl,\n  ipnUrl: ipnUrl,\n  extraData: extraData,\n  requestType: requestType,\n  signature: signature,\n  lang: 'en',\n});\n//Create the HTTPS objects\nconst https = require('https');\nconst options = {\n  hostname: 'test-payment.momo.vn',\n  port: 443,\n  path: '/v2/gateway/api/create',\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    'Content-Length': Buffer.byteLength(requestBody),\n  },\n};\n//Send the request and get the response\nconst req = https.request(options, (res) => {\n  console.log(`Status: ${res.statusCode}`);\n  console.log(`Headers: ${JSON.stringify(res.headers)}`);\n  res.setEncoding('utf8');\n  res.on('data', (body) => {\n    console.log('Body: ');\n    console.log(body);\n    console.log('payUrl: ');\n    console.log(JSON.parse(body).payUrl);\n  });\n  res.on('end', () => {\n    console.log('No more data in response.');\n  });\n});\n\nreq.on('error', (e) => {\n  console.log(`problem with request: ${e.message}`);\n});\n// write data to request body\nconsole.log('Sending....');\nreq.write(requestBody);\nreq.end();\n\nconst MoMo = () => {\n  return <div>MoMo</div>;\n};\n\nexport default MoMo;\n"]},"metadata":{},"sourceType":"module"}