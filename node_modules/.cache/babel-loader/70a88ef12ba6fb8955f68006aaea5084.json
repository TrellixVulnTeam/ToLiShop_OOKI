{"ast":null,"code":"var _jsxFileName = \"/Users/linhleba/Desktop/ToLiShop/src/components/snackbar/SnackBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setSnackbar } from '../../redux/ducks/snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2)\n    }\n  }\n}));\n\nconst CustomizedSnackbars = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const snackbarOpen = useSelector(state => state.snackbar.snackbarOpen);\n  const snackbarType = useSelector(state => state.snackbar.snackbarType);\n  const snackbarMessage = useSelector(state => state.snackbar.snackbarMessage);\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    dispatch(setSnackbar(false, snackbarType, snackbarMessage));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: snackbarOpen,\n      autoHideDuration: 3000,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'top',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        elevation: 6,\n        variant: \"filled\",\n        onClose: handleClose,\n        color: snackbarType,\n        children: snackbarMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomizedSnackbars, \"vGP/OUO7CZzthS34LWryt2lOxNQ=\", false, function () {\n  return [useStyles, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = CustomizedSnackbars;\nexport default CustomizedSnackbars;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedSnackbars\");","map":{"version":3,"sources":["/Users/linhleba/Desktop/ToLiShop/src/components/snackbar/SnackBar.jsx"],"names":["React","useDispatch","useSelector","Snackbar","Alert","makeStyles","setSnackbar","useStyles","theme","root","width","marginTop","spacing","CustomizedSnackbars","classes","dispatch","snackbarOpen","state","snackbar","snackbarType","snackbarMessage","handleClose","event","reason","vertical","horizontal"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJ,iBAAa;AACXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADA;AAFT;AADiC,CAAZ,CAAD,CAA5B;;AASA,MAAMC,mBAAmB,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AACA,QAAMQ,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,YAA3B,CAAhC;AACA,QAAMG,YAAY,GAAGjB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeC,YAA3B,CAAhC;AACA,QAAMC,eAAe,GAAGlB,WAAW,CAChCe,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeE,eADO,CAAnC;;AAGA,QAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,QAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AACDR,IAAAA,QAAQ,CAACT,WAAW,CAAC,KAAD,EAAQa,YAAR,EAAsBC,eAAtB,CAAZ,CAAR;AACD,GALD;;AAOA,sBACE;AAAK,IAAA,SAAS,EAAEN,OAAO,CAACL,IAAxB;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEO,YADR;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAEK,WAHX;AAIE,MAAA,YAAY,EAAE;AACZG,QAAAA,QAAQ,EAAE,KADE;AAEZC,QAAAA,UAAU,EAAE;AAFA,OAJhB;AAAA,6BASE,QAAC,KAAD;AACE,QAAA,SAAS,EAAE,CADb;AAEE,QAAA,OAAO,EAAC,QAFV;AAGE,QAAA,OAAO,EAAEJ,WAHX;AAIE,QAAA,KAAK,EAAEF,YAJT;AAAA,kBAMGC;AANH;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CArCD;;GAAMP,mB;UACYN,S,EACCN,W,EACIC,W,EACAA,W,EACGA,W;;;KALpBW,mB;AAuCN,eAAeA,mBAAf","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport Alert from '@material-ui/lab/Alert';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { setSnackbar } from '../../redux/ducks/snackbar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nconst CustomizedSnackbars = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const snackbarOpen = useSelector((state) => state.snackbar.snackbarOpen);\n  const snackbarType = useSelector((state) => state.snackbar.snackbarType);\n  const snackbarMessage = useSelector(\n    (state) => state.snackbar.snackbarMessage,\n  );\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    dispatch(setSnackbar(false, snackbarType, snackbarMessage));\n  };\n\n  return (\n    <div className={classes.root}>\n      <Snackbar\n        open={snackbarOpen}\n        autoHideDuration={3000}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n      >\n        <Alert\n          elevation={6}\n          variant=\"filled\"\n          onClose={handleClose}\n          color={snackbarType}\n        >\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </div>\n  );\n};\n\nexport default CustomizedSnackbars;\n"]},"metadata":{},"sourceType":"module"}