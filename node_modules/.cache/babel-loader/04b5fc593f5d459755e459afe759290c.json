{"ast":null,"code":"var _jsxFileName = \"/Users/linhleba/Desktop/ToLiShop/src/components/useForm/useForm.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport FormatPrice from '../../utils/formatPrice/formatPrice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  _s();\n\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    }); // validate while changing input\n\n    if (validateOnChange) {\n      validate({\n        [name]: value\n      });\n    }\n  };\n\n  const handleInputPrice = e => {\n    const {\n      name,\n      value\n    } = e.target; // console.log('value price', value);\n\n    const n = parseInt(value.replace(/\\D/g, ''), 10);\n    const formatValue = !n ? 0 : n.toLocaleString();\n    setValues({ ...values,\n      [name]: formatValue,\n\n      // validate while changing input\n      if(validateOnChange) {\n        validate({\n          [name]: formatValue\n        });\n      }\n\n    });\n  };\n\n  const handleAutoCompleteChange = (e, vals) => {\n    const id = e.target.id.split('-'); // format id: categories-option-0 => get the first value\n\n    const name = id[0];\n    setValues({ ...values,\n      [name]: vals\n    }); // validate while changing input\n    // if (validateOnChange) validate({ [name]: vals });\n  };\n\n  const handleCreatableInput = (field, value) => {\n    // const id = e.target.id.split('-');\n    // format id: categories-option-0 => get the first value\n    const name = value.name;\n    setValues({ ...values,\n      [name]: field\n    }); // validate while changing input\n    // if (validateOnChange) validate({ [name]: vals });\n  };\n\n  const resetForm = () => {\n    // set the initial values and no errors\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    handleAutoCompleteChange,\n    handleCreatableInput,\n    resetForm,\n    handleInputPrice\n  };\n}\n\n_s(useForm, \"eRFbKdGQbiaa9HoEdb7CtqsAoqM=\");\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1)\n    }\n  }\n}));\nexport function Form(props) {\n  _s2();\n\n  const classes = useStyles();\n  const {\n    children,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    ...other,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Form, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/linhleba/Desktop/ToLiShop/src/components/useForm/useForm.jsx"],"names":["React","useState","makeStyles","FormatPrice","useForm","initialFValues","validateOnChange","validate","values","setValues","errors","setErrors","handleInputChange","e","name","value","target","handleInputPrice","n","parseInt","replace","formatValue","toLocaleString","if","handleAutoCompleteChange","vals","id","split","handleCreatableInput","field","resetForm","useStyles","theme","root","width","margin","spacing","Form","props","classes","children","other"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,WAAP,MAAwB,qCAAxB;;AAEA,OAAO,SAASC,OAAT,CAAiBC,cAAjB,EAAiCC,gBAAgB,GAAG,KAApD,EAA2DC,QAA3D,EAAqE;AAAA;;AAC1E,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAACI,cAAD,CAApC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AAEAP,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,IAAD,GAAQC;AAFA,KAAD,CAAT,CAH+B,CAO/B;;AACA,QAAIT,gBAAJ,EAAsB;AACpBC,MAAAA,QAAQ,CAAC;AAAE,SAACO,IAAD,GAAQC;AAAV,OAAD,CAAR;AACD;AACF,GAXD;;AAYA,QAAME,gBAAgB,GAAIJ,CAAD,IAAO;AAC9B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B,CAD8B,CAE9B;;AACA,UAAME,CAAC,GAAGC,QAAQ,CAACJ,KAAK,CAACK,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAD,EAA2B,EAA3B,CAAlB;AACA,UAAMC,WAAW,GAAG,CAACH,CAAD,GAAK,CAAL,GAASA,CAAC,CAACI,cAAF,EAA7B;AACAb,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,IAAD,GAAQO,WAFA;;AAGR;AACAE,MAAAA,EAAE,CAACjB,gBAAD,EAAmB;AACnBC,QAAAA,QAAQ,CAAC;AAAE,WAACO,IAAD,GAAQO;AAAV,SAAD,CAAR;AACD;;AANO,KAAD,CAAT;AAQD,GAbD;;AAeA,QAAMG,wBAAwB,GAAG,CAACX,CAAD,EAAIY,IAAJ,KAAa;AAC5C,UAAMC,EAAE,GAAGb,CAAC,CAACG,MAAF,CAASU,EAAT,CAAYC,KAAZ,CAAkB,GAAlB,CAAX,CAD4C,CAE5C;;AACA,UAAMb,IAAI,GAAGY,EAAE,CAAC,CAAD,CAAf;AACAjB,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,IAAD,GAAQW;AAFA,KAAD,CAAT,CAJ4C,CAQ5C;AACA;AACD,GAVD;;AAYA,QAAMG,oBAAoB,GAAG,CAACC,KAAD,EAAQd,KAAR,KAAkB;AAC7C;AACA;AACA,UAAMD,IAAI,GAAGC,KAAK,CAACD,IAAnB;AACAL,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACM,IAAD,GAAQe;AAFA,KAAD,CAAT,CAJ6C,CAQ7C;AACA;AACD,GAVD;;AAYA,QAAMC,SAAS,GAAG,MAAM;AACtB;AACArB,IAAAA,SAAS,CAACJ,cAAD,CAAT;AACAM,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAJD;;AAMA,SAAO;AACLH,IAAAA,MADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,MAHK;AAILC,IAAAA,SAJK;AAKLC,IAAAA,iBALK;AAMLY,IAAAA,wBANK;AAOLI,IAAAA,oBAPK;AAQLE,IAAAA,SARK;AASLb,IAAAA;AATK,GAAP;AAWD;;GAxEeb,O;;AA0EhB,MAAM2B,SAAS,GAAG7B,UAAU,CAAE8B,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJ,8BAA0B;AACxBC,MAAAA,KAAK,EAAE,KADiB;AAExBC,MAAAA,MAAM,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFgB;AADtB;AADiC,CAAZ,CAAD,CAA5B;AASA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAC1B,QAAMC,OAAO,GAAGR,SAAS,EAAzB;AACA,QAAM;AAAES,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACE;AAAM,IAAA,SAAS,EAAEC,OAAO,CAACN,IAAzB;AAA+B,IAAA,YAAY,EAAC,KAA5C;AAAA,OAAsDQ,KAAtD;AAAA,cACGH,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;IAReH,I;UACEN,S;;;KADFM,I","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core';\nimport FormatPrice from '../../utils/formatPrice/formatPrice';\n\nexport function useForm(initialFValues, validateOnChange = false, validate) {\n  const [values, setValues] = useState(initialFValues);\n  const [errors, setErrors] = useState({});\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n\n    setValues({\n      ...values,\n      [name]: value,\n    });\n    // validate while changing input\n    if (validateOnChange) {\n      validate({ [name]: value });\n    }\n  };\n  const handleInputPrice = (e) => {\n    const { name, value } = e.target;\n    // console.log('value price', value);\n    const n = parseInt(value.replace(/\\D/g, ''), 10);\n    const formatValue = !n ? 0 : n.toLocaleString();\n    setValues({\n      ...values,\n      [name]: formatValue,\n      // validate while changing input\n      if(validateOnChange) {\n        validate({ [name]: formatValue });\n      },\n    });\n  };\n\n  const handleAutoCompleteChange = (e, vals) => {\n    const id = e.target.id.split('-');\n    // format id: categories-option-0 => get the first value\n    const name = id[0];\n    setValues({\n      ...values,\n      [name]: vals,\n    });\n    // validate while changing input\n    // if (validateOnChange) validate({ [name]: vals });\n  };\n\n  const handleCreatableInput = (field, value) => {\n    // const id = e.target.id.split('-');\n    // format id: categories-option-0 => get the first value\n    const name = value.name;\n    setValues({\n      ...values,\n      [name]: field,\n    });\n    // validate while changing input\n    // if (validateOnChange) validate({ [name]: vals });\n  };\n\n  const resetForm = () => {\n    // set the initial values and no errors\n    setValues(initialFValues);\n    setErrors({});\n  };\n\n  return {\n    values,\n    setValues,\n    errors,\n    setErrors,\n    handleInputChange,\n    handleAutoCompleteChange,\n    handleCreatableInput,\n    resetForm,\n    handleInputPrice,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiFormControl-root': {\n      width: '80%',\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport function Form(props) {\n  const classes = useStyles();\n  const { children, ...other } = props;\n  return (\n    <form className={classes.root} autoComplete=\"off\" {...other}>\n      {props.children}\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}