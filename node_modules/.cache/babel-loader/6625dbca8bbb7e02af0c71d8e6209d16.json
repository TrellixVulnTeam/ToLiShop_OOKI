{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  value: items\n};\nexport const cartItemsSlice = createSlice({\n  name: 'cartItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      console.log('new item is', action.payload);\n      const duplicate = state.value.filter(e => e.slug === newItem.slug && e.color === newItem.color && e.size === newItem.size);\n\n      if (duplicate.length > 0) {\n        state.value = state.value.filter(e => e.slug !== newItem.slug || e.color !== newItem.color || e.size !== newItem.size);\n        state.value = [...state.value, {\n          id: duplicate[0].id,\n          slug: newItem.slug,\n          color: newItem.color,\n          size: newItem.size,\n          price: newItem.price,\n          quantity: newItem.quantity + duplicate[0].quantity,\n          name: newItem.name,\n          image_url: newItem.image_url\n        }];\n      } else {\n        state.value = [...state.value, { ...action.payload,\n          id: state.value.length > 0 ? state.value[state.value.length - 1].id + 1 : 1\n        }];\n      }\n\n      localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)));\n    },\n    updateItem: (state, action) => {\n      const newItem = action.payload;\n      const item = state.value.filter(e => e.slug === newItem.slug && e.color === newItem.color && e.size === newItem.size);\n\n      if (item.length > 0) {\n        state.value = state.value.filter(e => e.slug !== newItem.slug || e.color !== newItem.color || e.size !== newItem.size);\n        state.value = [...state.value, {\n          id: item[0].id,\n          slug: newItem.slug,\n          color: newItem.color,\n          size: newItem.size,\n          price: newItem.price,\n          quantity: newItem.quantity,\n          name: newItem.name,\n          image_url: product.image_url\n        }];\n      }\n\n      localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)));\n    },\n    removeItem: (state, action) => {\n      const item = action.payload;\n      state.value = state.value.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size);\n      localStorage.setItem('cartItems', JSON.stringify(state.value.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0)));\n    }\n  }\n}); // Action creators are generated for each case reducer function\n\nexport const {\n  addItem,\n  removeItem,\n  updateItem\n} = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;","map":{"version":3,"sources":["/Users/linhleba/Desktop/ToLiShop/src/redux/shopping-cart/cartItemsSlide.js"],"names":["createSlice","items","localStorage","getItem","JSON","parse","initialState","value","cartItemsSlice","name","reducers","addItem","state","action","newItem","payload","console","log","duplicate","filter","e","slug","color","size","length","id","price","quantity","image_url","setItem","stringify","sort","a","b","updateItem","item","product","removeItem","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst items =\n  localStorage.getItem('cartItems') !== null\n    ? JSON.parse(localStorage.getItem('cartItems'))\n    : [];\n\nconst initialState = {\n  value: items,\n};\n\nexport const cartItemsSlice = createSlice({\n  name: 'cartItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      console.log('new item is', action.payload);\n      const duplicate = state.value.filter(\n        (e) =>\n          e.slug === newItem.slug &&\n          e.color === newItem.color &&\n          e.size === newItem.size,\n      );\n      if (duplicate.length > 0) {\n        state.value = state.value.filter(\n          (e) =>\n            e.slug !== newItem.slug ||\n            e.color !== newItem.color ||\n            e.size !== newItem.size,\n        );\n        state.value = [\n          ...state.value,\n          {\n            id: duplicate[0].id,\n            slug: newItem.slug,\n            color: newItem.color,\n            size: newItem.size,\n            price: newItem.price,\n            quantity: newItem.quantity + duplicate[0].quantity,\n            name: newItem.name,\n            image_url: newItem.image_url,\n          },\n        ];\n      } else {\n        state.value = [\n          ...state.value,\n          {\n            ...action.payload,\n            id:\n              state.value.length > 0\n                ? state.value[state.value.length - 1].id + 1\n                : 1,\n          },\n        ];\n      }\n      localStorage.setItem(\n        'cartItems',\n        JSON.stringify(\n          state.value.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0)),\n        ),\n      );\n    },\n    updateItem: (state, action) => {\n      const newItem = action.payload;\n      const item = state.value.filter(\n        (e) =>\n          e.slug === newItem.slug &&\n          e.color === newItem.color &&\n          e.size === newItem.size,\n      );\n      if (item.length > 0) {\n        state.value = state.value.filter(\n          (e) =>\n            e.slug !== newItem.slug ||\n            e.color !== newItem.color ||\n            e.size !== newItem.size,\n        );\n        state.value = [\n          ...state.value,\n          {\n            id: item[0].id,\n            slug: newItem.slug,\n            color: newItem.color,\n            size: newItem.size,\n            price: newItem.price,\n            quantity: newItem.quantity,\n            name: newItem.name,\n            image_url: product.image_url,\n          },\n        ];\n      }\n      localStorage.setItem(\n        'cartItems',\n        JSON.stringify(\n          state.value.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0)),\n        ),\n      );\n    },\n    removeItem: (state, action) => {\n      const item = action.payload;\n      state.value = state.value.filter(\n        (e) =>\n          e.slug !== item.slug ||\n          e.color !== item.color ||\n          e.size !== item.size,\n      );\n      localStorage.setItem(\n        'cartItems',\n        JSON.stringify(\n          state.value.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0)),\n        ),\n      );\n    },\n  },\n});\n\n// Action creators are generated for each case reducer function\nexport const { addItem, removeItem, updateItem } = cartItemsSlice.actions;\n\nexport default cartItemsSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}