{"ast":null,"code":"var _jsxFileName = \"/Users/linhleba/Desktop/ToLiShop/src/components/InfinityList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from './Grid';\nimport ProductCard from './ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityList = props => {\n  _s();\n\n  console.log('data product', props.data);\n  const perLoad = 6; // items each load\n\n  const listRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    setData(props.data.slice(0, perLoad));\n    setIndex(1);\n  }, [props.data]);\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (listRef && listRef.current) {\n        if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\n          console.log('bottom reach');\n          setLoad(true);\n        }\n      }\n    });\n  }, [listRef]);\n  useEffect(() => {\n    const getItems = () => {\n      const pages = Math.floor(props.data.length / perLoad);\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\n\n      if (load && index <= maxIndex) {\n        const start = perLoad * index;\n        const end = start + perLoad;\n        setData(data.concat(props.data.slice(start, end)));\n        setIndex(index + 1);\n      }\n    };\n\n    getItems();\n    setLoad(false);\n  }, [load, index, data, props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      col: 3,\n      mdCol: 2,\n      smCol: 1,\n      gap: 20,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        img01: item.image_url,\n        img02: item.image_url,\n        name: item.name,\n        price: Number(item.price),\n        slug: item.id\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfinityList, \"AENhqrXICbMD9iIt8+4R76Tu7cw=\");\n\n_c = InfinityList;\nInfinityList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default InfinityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityList\");","map":{"version":3,"sources":["/Users/linhleba/Desktop/ToLiShop/src/components/InfinityList.jsx"],"names":["React","useEffect","useRef","useState","PropTypes","Grid","ProductCard","InfinityList","props","console","log","data","perLoad","listRef","setData","load","setLoad","index","setIndex","slice","window","addEventListener","current","scrollY","innerHeight","clientHeight","offsetTop","getItems","pages","Math","floor","length","maxIndex","start","end","concat","map","item","image_url","name","Number","price","id","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Grid from './Grid';\nimport ProductCard from './ProductCard';\n\nconst InfinityList = (props) => {\n  console.log('data product', props.data);\n  const perLoad = 6; // items each load\n\n  const listRef = useRef(null);\n\n  const [data, setData] = useState([]);\n\n  const [load, setLoad] = useState(true);\n\n  const [index, setIndex] = useState(0);\n\n  useEffect(() => {\n    setData(props.data.slice(0, perLoad));\n    setIndex(1);\n  }, [props.data]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', () => {\n      if (listRef && listRef.current) {\n        if (\n          window.scrollY + window.innerHeight >=\n          listRef.current.clientHeight + listRef.current.offsetTop + 200\n        ) {\n          console.log('bottom reach');\n          setLoad(true);\n        }\n      }\n    });\n  }, [listRef]);\n\n  useEffect(() => {\n    const getItems = () => {\n      const pages = Math.floor(props.data.length / perLoad);\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\n\n      if (load && index <= maxIndex) {\n        const start = perLoad * index;\n        const end = start + perLoad;\n\n        setData(data.concat(props.data.slice(start, end)));\n        setIndex(index + 1);\n      }\n    };\n    getItems();\n    setLoad(false);\n  }, [load, index, data, props.data]);\n\n  return (\n    <div ref={listRef}>\n      <Grid col={3} mdCol={2} smCol={1} gap={20}>\n        {data.map((item, index) => (\n          <ProductCard\n            key={index}\n            img01={item.image_url}\n            img02={item.image_url}\n            name={item.name}\n            price={Number(item.price)}\n            slug={item.id}\n          />\n        ))}\n      </Grid>\n    </div>\n  );\n};\n\nInfinityList.propTypes = {\n  data: PropTypes.array.isRequired,\n};\n\nexport default InfinityList;\n"]},"metadata":{},"sourceType":"module"}